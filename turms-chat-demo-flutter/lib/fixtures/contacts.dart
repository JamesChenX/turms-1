import 'package:fixnum/fixnum.dart';

import '../domain/user/models/group_contact.dart';
import '../domain/user/models/user_contact.dart';

class ContactConversation {
  ContactConversation(this.userName, this.messages);

  final String userName;

  final List<String> messages;
}

List<ContactConversation> contactConversations = [
  // Earth
  ContactConversation('Murmurs of Earth - Greetings in 55 languages', [
    'ЁТБ▓ЁТИаЁТГ╢ЁТИиЁТВЧ',
    '╬Яс╝╡╧Д╬╣╬╜╬н╧В ╧А╬┐╧Дс╛┐ с╝Ф╧Г╧Д╬╡ ╧З╬▒╬п╧Б╬╡╧Д╬╡! ╬Хс╝░╧Б╬╖╬╜╬╣╬║с┐╢╧В ╧А╧Бс╜╕╧В ╧Ж╬п╬╗╬┐╧Е╧В с╝Р╬╗╬╖╬╗╧Н╬╕╬▒╬╝╬╡╬╜ ╧Ж╬п╬╗╬┐╬╣.',
    'Paz e felicidade a todos',
    'хРДф╜Нхе╜хЧОя╝ЯчеЭхРДф╜Нх╣│хоЙхБех║╖х┐лциВуАВ',
    'Adanni┼б lu ┼бulmu',
    '╨Ч╨┤╤А╨░╨▓╤Б╤В╨▓╤Г╨╣╤В╨╡! ╨Я╤А╨╕╨▓╨╡╤В╤Б╤В╨▓╤Г╤О ╨Т╨░╤Б!',
    'р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╣Ир╕░ р╕кр╕лр╕▓р╕вр╣Гр╕Щр╕Шр╕гр╕Ур╕╡р╣Вр╕Юр╣Йр╕Щ р╕Юр╕зр╕Бр╣Ар╕гр╕▓р╣Гр╕Щр╕Шр╕гр╕Ур╕╡р╕Щр╕╡р╣Йр╕Вр╕нр╕кр╣Ир╕Зр╕бр╕┤р╕Хр╕гр╕Ир╕┤р╕Хр╕бр╕▓р╕Цр╕╢р╕Зр╕Чр╣Ир╕▓р╕Щр╕Чр╕╕р╕Бр╕Др╕Щ',
    '.╪к╪н┘К╪з╪к┘Ж╪з ┘Д┘Д╪г╪╡╪п┘В╪з╪б ┘Б┘К ╪з┘Д┘Ж╪м┘И┘Е. ┘К╪з ┘Д┘К╪к ┘К╪м┘Е╪╣┘Ж╪з ╪з┘Д╪▓┘Е╪з┘Ж',
    'Salut─Гri la toat─Г lumea',
    'Bonjour tout le monde',
    'сАФсА▒сААсА▒сАмсАДсА║сА╕сАХсАлсАЮсАЬсАмсА╕',
    '╫й╫Ь╫Х╫Э',
    'Hola y saludos a todos',
    'Selamat malam hadirin sekalian, selamat berpisah dan sampai bertemu lagi dilain waktu',
    'Kay pachamamta niytapas maytapas rimapallasta runasimipi',
    'риЖриУ риЬрйА, риЬрйА риЖриЗриЖриВ риирйВрй░',
    'a┼б┼бuli',
    'ржиржорж╕рзНржХрж╛рж░, ржмрж┐рж╢рзНржмрзЗ рж╢рж╛ржирзНрждрж┐ рж╣рзЛржХ',
    'Salvete quicumque estis; bonam erga vos voluntatem habemus, et pacem per astra ferimus',
    'ЁРбМЁРбЛЁРбФ or ╫й╫Ь╫Э or ▄л▄а▄б ┼а╔Щl─Бm',
    'Hartelijke groeten aan iedereen',
    'Herzliche Gr├╝├Яe an alle',
    '╪з┘Д╪│┘Д╪з┘Е ╪╣┘Д┘К┌й┘Е ┘А █Б┘Е ╪▓┘Е┘К┘Ж ┌й█Т ╪▒█Б┘Ж█Т ┘И╪з┘Д┘И┌║ ┌й┘Й ╪╖╪▒┘Б ╪│█Т ╪в┘╛ ┌й┘И ╪о┘И╪┤ ╪в┘Е╪п┘К╪п ┌й█Б╪к█Т ┌╛┘К┌║',
    'Ch├вn th├аnh gс╗нi tс╗Ыi c├бc bс║бn lс╗Эi ch├аo th├вn hс╗пu',
    'Say─▒n T├╝rk├зe bilen arkada┼Яlar─▒m─▒z, sabah ┼Яerifleriniz hayrolsun',
    'уБУуВУуБлуБбуБпуАВуБКхЕГц░ЧуБзуБЩуБЛя╝Я',
    'рдзрд░рддреА рдХреЗ рд╡рд╛рд╕рд┐рдпреЛрдВ рдХреА рдУрд░ рд╕реЗ рдирдорд╕реНрдХрд╛рд░',
    'Iechyd da i chi yn awr, ac yn oesoedd',
    'Tanti auguri e saluti',
    '	р╢Жр╢║р╖Фр╢╢р╖Эр╖Ар╢▒р╖К!',
    'Siya nibingelela maqhawe sinifisela inkonzo ende.',
    'Reani lumelisa marela.',
    'чеЭуСЪхдзхо╢хе╜уАВ',
    '╘▓╒╕╒м╒╕╓А ╒б╒╢╒╕╒╢╓Б ╒╕╓А ╒п╒и ╒г╒┐╒╢╒╕╓В╒л╒╢ ╒┐╒л╒е╒ж╒е╓А╒г╒л ╒┤╒л╒г╒б╒┤╒б╒о╒╕╓В╒й╒л╓В╒╢╒з╒╢ ╒б╒╢╒д╒л╒╢, ╒╕╒▓╒╗╒╕╒╡╒╢╒╢╒е╓А',
    'ьХИыЕХэХШьД╕ьЪФ',
    'Witajcie, istoty z za┼Ыwiat├│w.',
    'рдкреНрд░рд┐рдереНрд╡реА рд╡рд╛рд╕реАрд╣рд░реБ рдмрд╛рдЯ рд╢рд╛рдиреНрддрд┐ рдордп рднрд╡рд┐рд╖реНрдп рдХреЛ рд╢реБрднрдХрд╛рдордирд╛',
    'хРДф╜НщГ╜хе╜хРзя╝ЯцИСф╗мщГ╜х╛ИцГ│х┐╡ф╜аф╗мя╝МцЬЙчй║шп╖хИ░ш┐ЩхД┐цЭечОйуАВ',
    'Mypone kaboutu noose.',
    'H├дlsningar fr├еn en dataprogrammerare i den lilla universitetsstaden Ithaca p├е planeten Jorden',
    'Mulibwanji imwe boonse bantu bakumwamba.',
    'рккрлГркерлНрк╡рлА ркЙрккрк░ рк╡рк╕ркирк╛рк░ ркПркХ ркорк╛ркирк╡ ркдрк░рклркерлА ркмрлНрк░рк╣рлНркорк╛ркВркбркирк╛ ркЕркирлНркп ркЕрк╡ркХрк╛рк╢ркорк╛ркВ рк╡рк╕ркирк╛рк░рк╛ркУркирлЗ рк╣рк╛рк░рлНркжрк┐ркХ ркЕркнрк┐ркиркВркжрки. ркЖ рк╕ркВркжрлЗрк╢рлЛ ркорк│рлНркпрлЗ, рк╡рк│ркдрлЛ рк╕ркВркжрлЗрк╢рлЛ ркорлЛркХрк▓рк╛рк╡рк╢рлЛ.',
    "╨Я╨╡╤А╨╡╤Б╨╕╨╗╨░╤Ф╨╝╨╛ ╨┐╤А╨╕╨▓╤Ц╤В ╤Ц╨╖ ╨╜╨░╤И╨╛╨│╨╛ ╤Б╨▓╤Ц╤В╤Г, ╨▒╨░╨╢╨░╤Ф╨╝╨╛ ╤Й╨░╤Б╤В╤П, ╨╖╨┤╨╛╤А╨╛╨▓'╤П ╤Ц ╨╝╨╜╨╛╨│╨░╤П ╨╗╤Ц╤В╨░",
    '╪п╪▒┘И╪п ╪и╪▒ ╪│╪з┌й┘Ж█М┘Ж ┘Е╪з┘И╪▒╪з█М ╪в╪│┘Е╪з┘ЖтАМ┘З╪з',
    '╨Ц╨╡╨╗╨╕╨╝╨╛ ╨▓╨░╨╝ ╤Б╨▓╨╡ ╨╜╨░╤Ш╨╗╨╡╨┐╤И╨╡ ╤Б╨░ ╨╜╨░╤И╨╡ ╨┐╨╗╨░╨╜╨╡╤В╨╡',
    'рм╕рнВрм░рнНрмпрнНрнЯ рмдрм╛рм░рмХрм╛рм░ рмдрнГрмдрнАрнЯ рмЧрнНрм░рм╣ рмкрнГрмерм┐рммрнАрм░рнБ рммрм┐рм╢рнНрн▒рммрнНрм░рм╣рнНрморм╛рмгрнНрмбрм░ рмЕрмзрм┐рммрм╛рм╕рнА рморм╛рмирмЩрнНрмХрнБ рмЕрмнрм┐рмирмирнНрмжрми',
    'Musulayo mutya abantu bensi eno mukama abawe emirembe bulijo.',
    'рдирдорд╕реНрдХрд╛рд░. рд╣реНрдпрд╛ рдкреГрдереНрд╡реАрддреАрд▓ рд▓реЛрдХ рддреБрдореНрд╣рд╛рд▓рд╛ рддреНрдпрд╛рдВрдЪреЗ рд╢реБрднрд╡рд┐рдЪрд╛рд░ рдкрд╛рдард╡рддрд╛рдд рдЖрдгрд┐ рддреНрдпрд╛рдВрдЪреА рдЗрдЪреНрдЫрд╛ рдЖрд╣реЗ рдХреА рддреБрдореНрд╣реА рд╣реНрдпрд╛ рдЬрдиреНрдореА рдзрдиреНрдп рд╡реНрд╣рд╛.',
    'хдкчй║цЬЛхПЛя╝МцББхе╜я╝БцББщгЯщг╜цЬкя╝ЯцЬЙщЦТшСЧф╛ЖщШощБохЭРхЦФуАВ',
    '├Ьdv├╢zletet k├╝ld├╝nk magyar nyelven minden b├йk├йt szeret┼С l├йnynek a Vil├бgegyetemen',
    'р░ир░ор░╕р▒Нр░др▒З, р░др▒Жр░▓р▒Бр░Чр▒Б р░ор░╛р░Яр▒Нр░▓р░╛р░бр▒З р░Ьр░ир░ор▒Бр░ир░ир░┐р░Вр░Ър░┐ р░ор░╛ р░╢р▒Бр░нр░╛р░Хр░╛р░Вр░Хр▒Нр░╖р░▓р▒Б.',
    'Mil├н p┼Щ├бtel├й, p┼Щejeme v├бm v┼бe nejlep┼б├н',
    'р▓ир▓ор▓╕р│Нр▓др│Ж, р▓Хр▓ир│Нр▓ир▓бр▓┐р▓Чр▓░ р▓кр▓░р▓╡р▓╛р▓Чр▓┐ р▓╢р│Бр▓нр▓╛р▓╖р▓пр▓Чр▓│р│Б.',
    '-',
    'Hello from the children of planet Earth'
  ]),
  // China
  ContactConversation('чкжхФп', [
    'цЪоцШечзЛшЙ▓',
    'хдЪх╝АщШФ',
    'х╣╗хг░хЗЛшР╜',
    'цЫЩхИЖ',
    'ф║СшИЮ',
    'хЖмчй┐цвн',
    'х╛АцЭеч╗Пш┐З',
    'цЙЛцМе',
    'цНХцНЙ',
    'ш╡╖щгОф║Ж',
    'щкдщЫихдПхдй',
    'цЪоцШе',
    'чзЛшЙ▓',
    'ф╕Ац╕Ец▒а',
    'хз╜хй│хжйхкЪ',
    'ф╕Зф╕ШхгС',
    'щФжч╝Оч╗лч╜Ч',
    'цГСхдЪ',
    'х╖▓ц╢ИшР╜',
    'хЕЙщШ┤х╜ТцЭе',
    'хПШчй║чЩ╜',
    'цЯУх░ШхЯГ',
    'ф╕Ах╣╢цХЫхЯЛ'
  ]),
  // America
  ContactConversation('Nina Simone', [
    '![Nina Simone - Stars / Feelings (Medley / Live at Montreux, 1976)](https://www.youtube.com/watch?v=Mf_5l1yTKNY)',
    '![butterfly](https://flutter.github.io/assets-for-api-docs/assets/videos/butterfly.mp4)'
  ]),
  // Brazil
  ContactConversation('Elis Regina', ['Como Nossos Pais']),
  // Japan
  ContactConversation('Nujabes - Aruarian Dance', []),
];

final fixtureUserContacts = contactConversations.indexed.map((item) {
  final (index, contactConversation) = item;
  return UserContact(
      userId: Int64(index + 1),
      name: contactConversation.userName,
      relationshipGroupId: Int64(1));
}).toList();

final contactToMessages = <Int64, List<String>>{
  for (var value in fixtureUserContacts)
    value.userId: contactConversations
        .firstWhere((item) => item.userName == value.name)
        .messages
};

final fixtureGroupContacts = fixtureUserContacts.indexed.map((item) {
  final (index, _) = item;
  final memberIds = <Int64>{};
  final memberCount = index + 1;
  for (var i = 0; i < memberCount; i++) {
    // TODO: oneself
    memberIds.add(fixtureUserContacts[i].userId);
  }
  return GroupContact(
      groupId: Int64(index + 1), memberIds: memberIds, name: 'fake group name');
}).toList();

final fixtureContacts = [...fixtureUserContacts, ...fixtureGroupContacts];