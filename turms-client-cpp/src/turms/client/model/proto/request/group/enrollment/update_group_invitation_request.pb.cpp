// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request/group/enrollment/update_group_invitation_request.proto

#include "turms/client/model/proto/request/group/enrollment/update_group_invitation_request.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {
        template <typename>
PROTOBUF_CONSTEXPR UpdateGroupInvitationRequest::UpdateGroupInvitationRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.reason_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.invitation_id_)*/ ::int64_t{0},
      /*decltype(_impl_.response_action_)*/ 0,
    } {}
struct UpdateGroupInvitationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateGroupInvitationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateGroupInvitationRequestDefaultTypeInternal() {}
  union {
    UpdateGroupInvitationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateGroupInvitationRequestDefaultTypeInternal _UpdateGroupInvitationRequest_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

class UpdateGroupInvitationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateGroupInvitationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_._has_bits_);
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UpdateGroupInvitationRequest::UpdateGroupInvitationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.UpdateGroupInvitationRequest)
}
UpdateGroupInvitationRequest::UpdateGroupInvitationRequest(const UpdateGroupInvitationRequest& from) : ::google::protobuf::MessageLite() {
  UpdateGroupInvitationRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.reason_){},
      decltype(_impl_.invitation_id_){},
      decltype(_impl_.response_action_){},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.reason_.Set(from._internal_reason(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.invitation_id_, &from._impl_.invitation_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.response_action_) -
    reinterpret_cast<char*>(&_impl_.invitation_id_)) + sizeof(_impl_.response_action_));

  // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.UpdateGroupInvitationRequest)
}
inline void UpdateGroupInvitationRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.reason_){},
      decltype(_impl_.invitation_id_){::int64_t{0}},
      decltype(_impl_.response_action_){0},
  };
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UpdateGroupInvitationRequest::~UpdateGroupInvitationRequest() {
  // @@protoc_insertion_point(destructor:turms.client.model.proto.UpdateGroupInvitationRequest)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void UpdateGroupInvitationRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reason_.Destroy();
}
void UpdateGroupInvitationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UpdateGroupInvitationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:turms.client.model.proto.UpdateGroupInvitationRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.reason_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.invitation_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.response_action_) -
      reinterpret_cast<char*>(&_impl_.invitation_id_)) + sizeof(_impl_.response_action_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* UpdateGroupInvitationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 68, 2> UpdateGroupInvitationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateGroupInvitationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 invitation_id = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.invitation_id_)}},
    // .turms.client.model.proto.ResponseAction response_action = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.response_action_)}},
    // optional string reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 invitation_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.invitation_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .turms.client.model.proto.ResponseAction response_action = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.response_action_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string reason = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\0\0\6\0\0\0\0"
    "turms.client.model.proto.UpdateGroupInvitationRequest"
    "reason"
  }},
};

::uint8_t* UpdateGroupInvitationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.UpdateGroupInvitationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 invitation_id = 1;
  if (this->_internal_invitation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_invitation_id(), target);
  }

  // .turms.client.model.proto.ResponseAction response_action = 2;
  if (this->_internal_response_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_response_action(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "turms.client.model.proto.UpdateGroupInvitationRequest.reason");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.UpdateGroupInvitationRequest)
  return target;
}

::size_t UpdateGroupInvitationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.UpdateGroupInvitationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string reason = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  // int64 invitation_id = 1;
  if (this->_internal_invitation_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_invitation_id());
  }

  // .turms.client.model.proto.ResponseAction response_action = 2;
  if (this->_internal_response_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_response_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupInvitationRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const UpdateGroupInvitationRequest*>(
      &from));
}

void UpdateGroupInvitationRequest::MergeFrom(const UpdateGroupInvitationRequest& from) {
  UpdateGroupInvitationRequest* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.UpdateGroupInvitationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_invitation_id() != 0) {
    _this->_internal_set_invitation_id(from._internal_invitation_id());
  }
  if (from._internal_response_action() != 0) {
    _this->_internal_set_response_action(from._internal_response_action());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UpdateGroupInvitationRequest::CopyFrom(const UpdateGroupInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.UpdateGroupInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateGroupInvitationRequest::IsInitialized() const {
  return true;
}

void UpdateGroupInvitationRequest::InternalSwap(UpdateGroupInvitationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, lhs_arena,
                                       &other->_impl_.reason_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.response_action_)
      + sizeof(UpdateGroupInvitationRequest::_impl_.response_action_)
      - PROTOBUF_FIELD_OFFSET(UpdateGroupInvitationRequest, _impl_.invitation_id_)>(
          reinterpret_cast<char*>(&_impl_.invitation_id_),
          reinterpret_cast<char*>(&other->_impl_.invitation_id_));
}

std::string UpdateGroupInvitationRequest::GetTypeName() const {
  return "turms.client.model.proto.UpdateGroupInvitationRequest";
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
