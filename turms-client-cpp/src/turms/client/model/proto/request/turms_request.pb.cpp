// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request/turms_request.proto

#include "turms/client/model/proto/request/turms_request.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {
        template <typename>
PROTOBUF_CONSTEXPR TurmsRequest::TurmsRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.request_id_)*/ ::int64_t{0},
      /*decltype(_impl_.kind_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct TurmsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TurmsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TurmsRequestDefaultTypeInternal() {}
  union {
    TurmsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TurmsRequestDefaultTypeInternal _TurmsRequest_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

class TurmsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TurmsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::turms::client::model::proto::TurmsRequest, _impl_._oneof_case_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::turms::client::model::proto::CreateSessionRequest& create_session_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteSessionRequest& delete_session_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryConversationsRequest& query_conversations_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateConversationRequest& update_conversation_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateTypingStatusRequest& update_typing_status_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateMessageRequest& create_message_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryMessagesRequest& query_messages_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateMessageRequest& update_message_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateGroupMembersRequest& create_group_members_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteGroupMembersRequest& delete_group_members_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupMembersRequest& query_group_members_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateGroupMemberRequest& update_group_member_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryUserProfilesRequest& query_user_profiles_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryNearbyUsersRequest& query_nearby_users_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryUserOnlineStatusesRequest& query_user_online_statuses_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateUserLocationRequest& update_user_location_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateUserOnlineStatusRequest& update_user_online_status_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateUserRequest& update_user_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateFriendRequestRequest& create_friend_request_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateRelationshipGroupRequest& create_relationship_group_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateRelationshipRequest& create_relationship_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteFriendRequestRequest& delete_friend_request_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteRelationshipGroupRequest& delete_relationship_group_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteRelationshipRequest& delete_relationship_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryFriendRequestsRequest& query_friend_requests_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryRelatedUserIdsRequest& query_related_user_ids_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryRelationshipGroupsRequest& query_relationship_groups_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryRelationshipsRequest& query_relationships_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateFriendRequestRequest& update_friend_request_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateRelationshipGroupRequest& update_relationship_group_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateRelationshipRequest& update_relationship_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateGroupRequest& create_group_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteGroupRequest& delete_group_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupsRequest& query_groups_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryJoinedGroupIdsRequest& query_joined_group_ids_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryJoinedGroupInfosRequest& query_joined_group_infos_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateGroupRequest& update_group_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateGroupBlockedUserRequest& create_group_blocked_user_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteGroupBlockedUserRequest& delete_group_blocked_user_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupBlockedUserIdsRequest& query_group_blocked_user_ids_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupBlockedUserInfosRequest& query_group_blocked_user_infos_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CheckGroupJoinQuestionsAnswersRequest& check_group_join_questions_answers_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateGroupInvitationRequest& create_group_invitation_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateGroupJoinRequestRequest& create_group_join_request_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::CreateGroupJoinQuestionsRequest& create_group_join_questions_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteGroupInvitationRequest& delete_group_invitation_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteGroupJoinRequestRequest& delete_group_join_request_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteGroupJoinQuestionsRequest& delete_group_join_questions_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupInvitationsRequest& query_group_invitations_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupJoinRequestsRequest& query_group_join_requests_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryGroupJoinQuestionsRequest& query_group_join_questions_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateGroupInvitationRequest& update_group_invitation_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateGroupJoinQuestionRequest& update_group_join_question_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateGroupJoinRequestRequest& update_group_join_request_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::DeleteResourceRequest& delete_resource_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryResourceDownloadInfoRequest& query_resource_download_info_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryResourceUploadInfoRequest& query_resource_upload_info_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::QueryMessageAttachmentInfosRequest& query_message_attachment_infos_request(const TurmsRequest* msg);
  static const ::turms::client::model::proto::UpdateMessageAttachmentInfoRequest& update_message_attachment_info_request(const TurmsRequest* msg);
};

const ::turms::client::model::proto::CreateSessionRequest& TurmsRequest::_Internal::create_session_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_session_request_;
}
const ::turms::client::model::proto::DeleteSessionRequest& TurmsRequest::_Internal::delete_session_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_session_request_;
}
const ::turms::client::model::proto::QueryConversationsRequest& TurmsRequest::_Internal::query_conversations_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_conversations_request_;
}
const ::turms::client::model::proto::UpdateConversationRequest& TurmsRequest::_Internal::update_conversation_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_conversation_request_;
}
const ::turms::client::model::proto::UpdateTypingStatusRequest& TurmsRequest::_Internal::update_typing_status_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_typing_status_request_;
}
const ::turms::client::model::proto::CreateMessageRequest& TurmsRequest::_Internal::create_message_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_message_request_;
}
const ::turms::client::model::proto::QueryMessagesRequest& TurmsRequest::_Internal::query_messages_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_messages_request_;
}
const ::turms::client::model::proto::UpdateMessageRequest& TurmsRequest::_Internal::update_message_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_message_request_;
}
const ::turms::client::model::proto::CreateGroupMembersRequest& TurmsRequest::_Internal::create_group_members_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_group_members_request_;
}
const ::turms::client::model::proto::DeleteGroupMembersRequest& TurmsRequest::_Internal::delete_group_members_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_group_members_request_;
}
const ::turms::client::model::proto::QueryGroupMembersRequest& TurmsRequest::_Internal::query_group_members_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_group_members_request_;
}
const ::turms::client::model::proto::UpdateGroupMemberRequest& TurmsRequest::_Internal::update_group_member_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_group_member_request_;
}
const ::turms::client::model::proto::QueryUserProfilesRequest& TurmsRequest::_Internal::query_user_profiles_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_user_profiles_request_;
}
const ::turms::client::model::proto::QueryNearbyUsersRequest& TurmsRequest::_Internal::query_nearby_users_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_nearby_users_request_;
}
const ::turms::client::model::proto::QueryUserOnlineStatusesRequest& TurmsRequest::_Internal::query_user_online_statuses_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_user_online_statuses_request_;
}
const ::turms::client::model::proto::UpdateUserLocationRequest& TurmsRequest::_Internal::update_user_location_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_user_location_request_;
}
const ::turms::client::model::proto::UpdateUserOnlineStatusRequest& TurmsRequest::_Internal::update_user_online_status_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_user_online_status_request_;
}
const ::turms::client::model::proto::UpdateUserRequest& TurmsRequest::_Internal::update_user_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_user_request_;
}
const ::turms::client::model::proto::CreateFriendRequestRequest& TurmsRequest::_Internal::create_friend_request_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_friend_request_request_;
}
const ::turms::client::model::proto::CreateRelationshipGroupRequest& TurmsRequest::_Internal::create_relationship_group_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_relationship_group_request_;
}
const ::turms::client::model::proto::CreateRelationshipRequest& TurmsRequest::_Internal::create_relationship_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_relationship_request_;
}
const ::turms::client::model::proto::DeleteFriendRequestRequest& TurmsRequest::_Internal::delete_friend_request_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_friend_request_request_;
}
const ::turms::client::model::proto::DeleteRelationshipGroupRequest& TurmsRequest::_Internal::delete_relationship_group_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_relationship_group_request_;
}
const ::turms::client::model::proto::DeleteRelationshipRequest& TurmsRequest::_Internal::delete_relationship_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_relationship_request_;
}
const ::turms::client::model::proto::QueryFriendRequestsRequest& TurmsRequest::_Internal::query_friend_requests_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_friend_requests_request_;
}
const ::turms::client::model::proto::QueryRelatedUserIdsRequest& TurmsRequest::_Internal::query_related_user_ids_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_related_user_ids_request_;
}
const ::turms::client::model::proto::QueryRelationshipGroupsRequest& TurmsRequest::_Internal::query_relationship_groups_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_relationship_groups_request_;
}
const ::turms::client::model::proto::QueryRelationshipsRequest& TurmsRequest::_Internal::query_relationships_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_relationships_request_;
}
const ::turms::client::model::proto::UpdateFriendRequestRequest& TurmsRequest::_Internal::update_friend_request_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_friend_request_request_;
}
const ::turms::client::model::proto::UpdateRelationshipGroupRequest& TurmsRequest::_Internal::update_relationship_group_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_relationship_group_request_;
}
const ::turms::client::model::proto::UpdateRelationshipRequest& TurmsRequest::_Internal::update_relationship_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_relationship_request_;
}
const ::turms::client::model::proto::CreateGroupRequest& TurmsRequest::_Internal::create_group_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_group_request_;
}
const ::turms::client::model::proto::DeleteGroupRequest& TurmsRequest::_Internal::delete_group_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_group_request_;
}
const ::turms::client::model::proto::QueryGroupsRequest& TurmsRequest::_Internal::query_groups_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_groups_request_;
}
const ::turms::client::model::proto::QueryJoinedGroupIdsRequest& TurmsRequest::_Internal::query_joined_group_ids_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_joined_group_ids_request_;
}
const ::turms::client::model::proto::QueryJoinedGroupInfosRequest& TurmsRequest::_Internal::query_joined_group_infos_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_joined_group_infos_request_;
}
const ::turms::client::model::proto::UpdateGroupRequest& TurmsRequest::_Internal::update_group_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_group_request_;
}
const ::turms::client::model::proto::CreateGroupBlockedUserRequest& TurmsRequest::_Internal::create_group_blocked_user_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_group_blocked_user_request_;
}
const ::turms::client::model::proto::DeleteGroupBlockedUserRequest& TurmsRequest::_Internal::delete_group_blocked_user_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_group_blocked_user_request_;
}
const ::turms::client::model::proto::QueryGroupBlockedUserIdsRequest& TurmsRequest::_Internal::query_group_blocked_user_ids_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_group_blocked_user_ids_request_;
}
const ::turms::client::model::proto::QueryGroupBlockedUserInfosRequest& TurmsRequest::_Internal::query_group_blocked_user_infos_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_group_blocked_user_infos_request_;
}
const ::turms::client::model::proto::CheckGroupJoinQuestionsAnswersRequest& TurmsRequest::_Internal::check_group_join_questions_answers_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.check_group_join_questions_answers_request_;
}
const ::turms::client::model::proto::CreateGroupInvitationRequest& TurmsRequest::_Internal::create_group_invitation_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_group_invitation_request_;
}
const ::turms::client::model::proto::CreateGroupJoinRequestRequest& TurmsRequest::_Internal::create_group_join_request_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_group_join_request_request_;
}
const ::turms::client::model::proto::CreateGroupJoinQuestionsRequest& TurmsRequest::_Internal::create_group_join_questions_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.create_group_join_questions_request_;
}
const ::turms::client::model::proto::DeleteGroupInvitationRequest& TurmsRequest::_Internal::delete_group_invitation_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_group_invitation_request_;
}
const ::turms::client::model::proto::DeleteGroupJoinRequestRequest& TurmsRequest::_Internal::delete_group_join_request_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_group_join_request_request_;
}
const ::turms::client::model::proto::DeleteGroupJoinQuestionsRequest& TurmsRequest::_Internal::delete_group_join_questions_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_group_join_questions_request_;
}
const ::turms::client::model::proto::QueryGroupInvitationsRequest& TurmsRequest::_Internal::query_group_invitations_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_group_invitations_request_;
}
const ::turms::client::model::proto::QueryGroupJoinRequestsRequest& TurmsRequest::_Internal::query_group_join_requests_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_group_join_requests_request_;
}
const ::turms::client::model::proto::QueryGroupJoinQuestionsRequest& TurmsRequest::_Internal::query_group_join_questions_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_group_join_questions_request_;
}
const ::turms::client::model::proto::UpdateGroupInvitationRequest& TurmsRequest::_Internal::update_group_invitation_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_group_invitation_request_;
}
const ::turms::client::model::proto::UpdateGroupJoinQuestionRequest& TurmsRequest::_Internal::update_group_join_question_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_group_join_question_request_;
}
const ::turms::client::model::proto::UpdateGroupJoinRequestRequest& TurmsRequest::_Internal::update_group_join_request_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_group_join_request_request_;
}
const ::turms::client::model::proto::DeleteResourceRequest& TurmsRequest::_Internal::delete_resource_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.delete_resource_request_;
}
const ::turms::client::model::proto::QueryResourceDownloadInfoRequest& TurmsRequest::_Internal::query_resource_download_info_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_resource_download_info_request_;
}
const ::turms::client::model::proto::QueryResourceUploadInfoRequest& TurmsRequest::_Internal::query_resource_upload_info_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_resource_upload_info_request_;
}
const ::turms::client::model::proto::QueryMessageAttachmentInfosRequest& TurmsRequest::_Internal::query_message_attachment_infos_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.query_message_attachment_infos_request_;
}
const ::turms::client::model::proto::UpdateMessageAttachmentInfoRequest& TurmsRequest::_Internal::update_message_attachment_info_request(const TurmsRequest* msg) {
  return *msg->_impl_.kind_.update_message_attachment_info_request_;
}
void TurmsRequest::set_allocated_create_session_request(::turms::client::model::proto::CreateSessionRequest* create_session_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_session_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_session_request));
    if (message_arena != submessage_arena) {
      create_session_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_session_request, submessage_arena);
    }
    set_has_create_session_request();
    _impl_.kind_.create_session_request_ = create_session_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_session_request)
}
void TurmsRequest::clear_create_session_request() {
  if (kind_case() == kCreateSessionRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_session_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_session_request(::turms::client::model::proto::DeleteSessionRequest* delete_session_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_session_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_session_request));
    if (message_arena != submessage_arena) {
      delete_session_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_session_request, submessage_arena);
    }
    set_has_delete_session_request();
    _impl_.kind_.delete_session_request_ = delete_session_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_session_request)
}
void TurmsRequest::clear_delete_session_request() {
  if (kind_case() == kDeleteSessionRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_session_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_conversations_request(::turms::client::model::proto::QueryConversationsRequest* query_conversations_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_conversations_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_conversations_request));
    if (message_arena != submessage_arena) {
      query_conversations_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_conversations_request, submessage_arena);
    }
    set_has_query_conversations_request();
    _impl_.kind_.query_conversations_request_ = query_conversations_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_conversations_request)
}
void TurmsRequest::clear_query_conversations_request() {
  if (kind_case() == kQueryConversationsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_conversations_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_conversation_request(::turms::client::model::proto::UpdateConversationRequest* update_conversation_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_conversation_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_conversation_request));
    if (message_arena != submessage_arena) {
      update_conversation_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_conversation_request, submessage_arena);
    }
    set_has_update_conversation_request();
    _impl_.kind_.update_conversation_request_ = update_conversation_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_conversation_request)
}
void TurmsRequest::clear_update_conversation_request() {
  if (kind_case() == kUpdateConversationRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_conversation_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_typing_status_request(::turms::client::model::proto::UpdateTypingStatusRequest* update_typing_status_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_typing_status_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_typing_status_request));
    if (message_arena != submessage_arena) {
      update_typing_status_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_typing_status_request, submessage_arena);
    }
    set_has_update_typing_status_request();
    _impl_.kind_.update_typing_status_request_ = update_typing_status_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_typing_status_request)
}
void TurmsRequest::clear_update_typing_status_request() {
  if (kind_case() == kUpdateTypingStatusRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_typing_status_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_message_request(::turms::client::model::proto::CreateMessageRequest* create_message_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_message_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_message_request));
    if (message_arena != submessage_arena) {
      create_message_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_message_request, submessage_arena);
    }
    set_has_create_message_request();
    _impl_.kind_.create_message_request_ = create_message_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_message_request)
}
void TurmsRequest::clear_create_message_request() {
  if (kind_case() == kCreateMessageRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_message_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_messages_request(::turms::client::model::proto::QueryMessagesRequest* query_messages_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_messages_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_messages_request));
    if (message_arena != submessage_arena) {
      query_messages_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_messages_request, submessage_arena);
    }
    set_has_query_messages_request();
    _impl_.kind_.query_messages_request_ = query_messages_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_messages_request)
}
void TurmsRequest::clear_query_messages_request() {
  if (kind_case() == kQueryMessagesRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_messages_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_message_request(::turms::client::model::proto::UpdateMessageRequest* update_message_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_message_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_message_request));
    if (message_arena != submessage_arena) {
      update_message_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_message_request, submessage_arena);
    }
    set_has_update_message_request();
    _impl_.kind_.update_message_request_ = update_message_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_message_request)
}
void TurmsRequest::clear_update_message_request() {
  if (kind_case() == kUpdateMessageRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_message_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_group_members_request(::turms::client::model::proto::CreateGroupMembersRequest* create_group_members_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_group_members_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_group_members_request));
    if (message_arena != submessage_arena) {
      create_group_members_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_group_members_request, submessage_arena);
    }
    set_has_create_group_members_request();
    _impl_.kind_.create_group_members_request_ = create_group_members_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_group_members_request)
}
void TurmsRequest::clear_create_group_members_request() {
  if (kind_case() == kCreateGroupMembersRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_group_members_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_group_members_request(::turms::client::model::proto::DeleteGroupMembersRequest* delete_group_members_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_group_members_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_group_members_request));
    if (message_arena != submessage_arena) {
      delete_group_members_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_group_members_request, submessage_arena);
    }
    set_has_delete_group_members_request();
    _impl_.kind_.delete_group_members_request_ = delete_group_members_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_group_members_request)
}
void TurmsRequest::clear_delete_group_members_request() {
  if (kind_case() == kDeleteGroupMembersRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_group_members_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_group_members_request(::turms::client::model::proto::QueryGroupMembersRequest* query_group_members_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_group_members_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_group_members_request));
    if (message_arena != submessage_arena) {
      query_group_members_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_group_members_request, submessage_arena);
    }
    set_has_query_group_members_request();
    _impl_.kind_.query_group_members_request_ = query_group_members_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_group_members_request)
}
void TurmsRequest::clear_query_group_members_request() {
  if (kind_case() == kQueryGroupMembersRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_group_members_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_group_member_request(::turms::client::model::proto::UpdateGroupMemberRequest* update_group_member_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_group_member_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_group_member_request));
    if (message_arena != submessage_arena) {
      update_group_member_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_group_member_request, submessage_arena);
    }
    set_has_update_group_member_request();
    _impl_.kind_.update_group_member_request_ = update_group_member_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_group_member_request)
}
void TurmsRequest::clear_update_group_member_request() {
  if (kind_case() == kUpdateGroupMemberRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_group_member_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_user_profiles_request(::turms::client::model::proto::QueryUserProfilesRequest* query_user_profiles_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_user_profiles_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_user_profiles_request));
    if (message_arena != submessage_arena) {
      query_user_profiles_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_user_profiles_request, submessage_arena);
    }
    set_has_query_user_profiles_request();
    _impl_.kind_.query_user_profiles_request_ = query_user_profiles_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_user_profiles_request)
}
void TurmsRequest::clear_query_user_profiles_request() {
  if (kind_case() == kQueryUserProfilesRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_user_profiles_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_nearby_users_request(::turms::client::model::proto::QueryNearbyUsersRequest* query_nearby_users_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_nearby_users_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_nearby_users_request));
    if (message_arena != submessage_arena) {
      query_nearby_users_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_nearby_users_request, submessage_arena);
    }
    set_has_query_nearby_users_request();
    _impl_.kind_.query_nearby_users_request_ = query_nearby_users_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_nearby_users_request)
}
void TurmsRequest::clear_query_nearby_users_request() {
  if (kind_case() == kQueryNearbyUsersRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_nearby_users_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_user_online_statuses_request(::turms::client::model::proto::QueryUserOnlineStatusesRequest* query_user_online_statuses_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_user_online_statuses_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_user_online_statuses_request));
    if (message_arena != submessage_arena) {
      query_user_online_statuses_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_user_online_statuses_request, submessage_arena);
    }
    set_has_query_user_online_statuses_request();
    _impl_.kind_.query_user_online_statuses_request_ = query_user_online_statuses_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_user_online_statuses_request)
}
void TurmsRequest::clear_query_user_online_statuses_request() {
  if (kind_case() == kQueryUserOnlineStatusesRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_user_online_statuses_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_user_location_request(::turms::client::model::proto::UpdateUserLocationRequest* update_user_location_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_user_location_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_user_location_request));
    if (message_arena != submessage_arena) {
      update_user_location_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_user_location_request, submessage_arena);
    }
    set_has_update_user_location_request();
    _impl_.kind_.update_user_location_request_ = update_user_location_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_user_location_request)
}
void TurmsRequest::clear_update_user_location_request() {
  if (kind_case() == kUpdateUserLocationRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_user_location_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_user_online_status_request(::turms::client::model::proto::UpdateUserOnlineStatusRequest* update_user_online_status_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_user_online_status_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_user_online_status_request));
    if (message_arena != submessage_arena) {
      update_user_online_status_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_user_online_status_request, submessage_arena);
    }
    set_has_update_user_online_status_request();
    _impl_.kind_.update_user_online_status_request_ = update_user_online_status_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_user_online_status_request)
}
void TurmsRequest::clear_update_user_online_status_request() {
  if (kind_case() == kUpdateUserOnlineStatusRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_user_online_status_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_user_request(::turms::client::model::proto::UpdateUserRequest* update_user_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_user_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_user_request));
    if (message_arena != submessage_arena) {
      update_user_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_user_request, submessage_arena);
    }
    set_has_update_user_request();
    _impl_.kind_.update_user_request_ = update_user_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_user_request)
}
void TurmsRequest::clear_update_user_request() {
  if (kind_case() == kUpdateUserRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_user_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_friend_request_request(::turms::client::model::proto::CreateFriendRequestRequest* create_friend_request_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_friend_request_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_friend_request_request));
    if (message_arena != submessage_arena) {
      create_friend_request_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_friend_request_request, submessage_arena);
    }
    set_has_create_friend_request_request();
    _impl_.kind_.create_friend_request_request_ = create_friend_request_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_friend_request_request)
}
void TurmsRequest::clear_create_friend_request_request() {
  if (kind_case() == kCreateFriendRequestRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_friend_request_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_relationship_group_request(::turms::client::model::proto::CreateRelationshipGroupRequest* create_relationship_group_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_relationship_group_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_relationship_group_request));
    if (message_arena != submessage_arena) {
      create_relationship_group_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_relationship_group_request, submessage_arena);
    }
    set_has_create_relationship_group_request();
    _impl_.kind_.create_relationship_group_request_ = create_relationship_group_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_relationship_group_request)
}
void TurmsRequest::clear_create_relationship_group_request() {
  if (kind_case() == kCreateRelationshipGroupRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_relationship_group_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_relationship_request(::turms::client::model::proto::CreateRelationshipRequest* create_relationship_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_relationship_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_relationship_request));
    if (message_arena != submessage_arena) {
      create_relationship_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_relationship_request, submessage_arena);
    }
    set_has_create_relationship_request();
    _impl_.kind_.create_relationship_request_ = create_relationship_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_relationship_request)
}
void TurmsRequest::clear_create_relationship_request() {
  if (kind_case() == kCreateRelationshipRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_relationship_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_friend_request_request(::turms::client::model::proto::DeleteFriendRequestRequest* delete_friend_request_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_friend_request_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_friend_request_request));
    if (message_arena != submessage_arena) {
      delete_friend_request_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_friend_request_request, submessage_arena);
    }
    set_has_delete_friend_request_request();
    _impl_.kind_.delete_friend_request_request_ = delete_friend_request_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_friend_request_request)
}
void TurmsRequest::clear_delete_friend_request_request() {
  if (kind_case() == kDeleteFriendRequestRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_friend_request_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_relationship_group_request(::turms::client::model::proto::DeleteRelationshipGroupRequest* delete_relationship_group_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_relationship_group_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_relationship_group_request));
    if (message_arena != submessage_arena) {
      delete_relationship_group_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_relationship_group_request, submessage_arena);
    }
    set_has_delete_relationship_group_request();
    _impl_.kind_.delete_relationship_group_request_ = delete_relationship_group_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_relationship_group_request)
}
void TurmsRequest::clear_delete_relationship_group_request() {
  if (kind_case() == kDeleteRelationshipGroupRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_relationship_group_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_relationship_request(::turms::client::model::proto::DeleteRelationshipRequest* delete_relationship_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_relationship_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_relationship_request));
    if (message_arena != submessage_arena) {
      delete_relationship_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_relationship_request, submessage_arena);
    }
    set_has_delete_relationship_request();
    _impl_.kind_.delete_relationship_request_ = delete_relationship_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_relationship_request)
}
void TurmsRequest::clear_delete_relationship_request() {
  if (kind_case() == kDeleteRelationshipRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_relationship_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_friend_requests_request(::turms::client::model::proto::QueryFriendRequestsRequest* query_friend_requests_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_friend_requests_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_friend_requests_request));
    if (message_arena != submessage_arena) {
      query_friend_requests_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_friend_requests_request, submessage_arena);
    }
    set_has_query_friend_requests_request();
    _impl_.kind_.query_friend_requests_request_ = query_friend_requests_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_friend_requests_request)
}
void TurmsRequest::clear_query_friend_requests_request() {
  if (kind_case() == kQueryFriendRequestsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_friend_requests_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_related_user_ids_request(::turms::client::model::proto::QueryRelatedUserIdsRequest* query_related_user_ids_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_related_user_ids_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_related_user_ids_request));
    if (message_arena != submessage_arena) {
      query_related_user_ids_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_related_user_ids_request, submessage_arena);
    }
    set_has_query_related_user_ids_request();
    _impl_.kind_.query_related_user_ids_request_ = query_related_user_ids_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_related_user_ids_request)
}
void TurmsRequest::clear_query_related_user_ids_request() {
  if (kind_case() == kQueryRelatedUserIdsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_related_user_ids_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_relationship_groups_request(::turms::client::model::proto::QueryRelationshipGroupsRequest* query_relationship_groups_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_relationship_groups_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_relationship_groups_request));
    if (message_arena != submessage_arena) {
      query_relationship_groups_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_relationship_groups_request, submessage_arena);
    }
    set_has_query_relationship_groups_request();
    _impl_.kind_.query_relationship_groups_request_ = query_relationship_groups_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_relationship_groups_request)
}
void TurmsRequest::clear_query_relationship_groups_request() {
  if (kind_case() == kQueryRelationshipGroupsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_relationship_groups_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_relationships_request(::turms::client::model::proto::QueryRelationshipsRequest* query_relationships_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_relationships_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_relationships_request));
    if (message_arena != submessage_arena) {
      query_relationships_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_relationships_request, submessage_arena);
    }
    set_has_query_relationships_request();
    _impl_.kind_.query_relationships_request_ = query_relationships_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_relationships_request)
}
void TurmsRequest::clear_query_relationships_request() {
  if (kind_case() == kQueryRelationshipsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_relationships_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_friend_request_request(::turms::client::model::proto::UpdateFriendRequestRequest* update_friend_request_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_friend_request_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_friend_request_request));
    if (message_arena != submessage_arena) {
      update_friend_request_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_friend_request_request, submessage_arena);
    }
    set_has_update_friend_request_request();
    _impl_.kind_.update_friend_request_request_ = update_friend_request_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_friend_request_request)
}
void TurmsRequest::clear_update_friend_request_request() {
  if (kind_case() == kUpdateFriendRequestRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_friend_request_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_relationship_group_request(::turms::client::model::proto::UpdateRelationshipGroupRequest* update_relationship_group_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_relationship_group_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_relationship_group_request));
    if (message_arena != submessage_arena) {
      update_relationship_group_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_relationship_group_request, submessage_arena);
    }
    set_has_update_relationship_group_request();
    _impl_.kind_.update_relationship_group_request_ = update_relationship_group_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_relationship_group_request)
}
void TurmsRequest::clear_update_relationship_group_request() {
  if (kind_case() == kUpdateRelationshipGroupRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_relationship_group_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_relationship_request(::turms::client::model::proto::UpdateRelationshipRequest* update_relationship_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_relationship_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_relationship_request));
    if (message_arena != submessage_arena) {
      update_relationship_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_relationship_request, submessage_arena);
    }
    set_has_update_relationship_request();
    _impl_.kind_.update_relationship_request_ = update_relationship_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_relationship_request)
}
void TurmsRequest::clear_update_relationship_request() {
  if (kind_case() == kUpdateRelationshipRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_relationship_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_group_request(::turms::client::model::proto::CreateGroupRequest* create_group_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_group_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_group_request));
    if (message_arena != submessage_arena) {
      create_group_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_group_request, submessage_arena);
    }
    set_has_create_group_request();
    _impl_.kind_.create_group_request_ = create_group_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_group_request)
}
void TurmsRequest::clear_create_group_request() {
  if (kind_case() == kCreateGroupRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_group_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_group_request(::turms::client::model::proto::DeleteGroupRequest* delete_group_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_group_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_group_request));
    if (message_arena != submessage_arena) {
      delete_group_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_group_request, submessage_arena);
    }
    set_has_delete_group_request();
    _impl_.kind_.delete_group_request_ = delete_group_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_group_request)
}
void TurmsRequest::clear_delete_group_request() {
  if (kind_case() == kDeleteGroupRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_group_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_groups_request(::turms::client::model::proto::QueryGroupsRequest* query_groups_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_groups_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_groups_request));
    if (message_arena != submessage_arena) {
      query_groups_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_groups_request, submessage_arena);
    }
    set_has_query_groups_request();
    _impl_.kind_.query_groups_request_ = query_groups_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_groups_request)
}
void TurmsRequest::clear_query_groups_request() {
  if (kind_case() == kQueryGroupsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_groups_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_joined_group_ids_request(::turms::client::model::proto::QueryJoinedGroupIdsRequest* query_joined_group_ids_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_joined_group_ids_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_joined_group_ids_request));
    if (message_arena != submessage_arena) {
      query_joined_group_ids_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_joined_group_ids_request, submessage_arena);
    }
    set_has_query_joined_group_ids_request();
    _impl_.kind_.query_joined_group_ids_request_ = query_joined_group_ids_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_joined_group_ids_request)
}
void TurmsRequest::clear_query_joined_group_ids_request() {
  if (kind_case() == kQueryJoinedGroupIdsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_joined_group_ids_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_joined_group_infos_request(::turms::client::model::proto::QueryJoinedGroupInfosRequest* query_joined_group_infos_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_joined_group_infos_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_joined_group_infos_request));
    if (message_arena != submessage_arena) {
      query_joined_group_infos_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_joined_group_infos_request, submessage_arena);
    }
    set_has_query_joined_group_infos_request();
    _impl_.kind_.query_joined_group_infos_request_ = query_joined_group_infos_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_joined_group_infos_request)
}
void TurmsRequest::clear_query_joined_group_infos_request() {
  if (kind_case() == kQueryJoinedGroupInfosRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_joined_group_infos_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_group_request(::turms::client::model::proto::UpdateGroupRequest* update_group_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_group_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_group_request));
    if (message_arena != submessage_arena) {
      update_group_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_group_request, submessage_arena);
    }
    set_has_update_group_request();
    _impl_.kind_.update_group_request_ = update_group_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_group_request)
}
void TurmsRequest::clear_update_group_request() {
  if (kind_case() == kUpdateGroupRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_group_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_group_blocked_user_request(::turms::client::model::proto::CreateGroupBlockedUserRequest* create_group_blocked_user_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_group_blocked_user_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_group_blocked_user_request));
    if (message_arena != submessage_arena) {
      create_group_blocked_user_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_group_blocked_user_request, submessage_arena);
    }
    set_has_create_group_blocked_user_request();
    _impl_.kind_.create_group_blocked_user_request_ = create_group_blocked_user_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_group_blocked_user_request)
}
void TurmsRequest::clear_create_group_blocked_user_request() {
  if (kind_case() == kCreateGroupBlockedUserRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_group_blocked_user_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_group_blocked_user_request(::turms::client::model::proto::DeleteGroupBlockedUserRequest* delete_group_blocked_user_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_group_blocked_user_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_group_blocked_user_request));
    if (message_arena != submessage_arena) {
      delete_group_blocked_user_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_group_blocked_user_request, submessage_arena);
    }
    set_has_delete_group_blocked_user_request();
    _impl_.kind_.delete_group_blocked_user_request_ = delete_group_blocked_user_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_group_blocked_user_request)
}
void TurmsRequest::clear_delete_group_blocked_user_request() {
  if (kind_case() == kDeleteGroupBlockedUserRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_group_blocked_user_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_group_blocked_user_ids_request(::turms::client::model::proto::QueryGroupBlockedUserIdsRequest* query_group_blocked_user_ids_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_group_blocked_user_ids_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_group_blocked_user_ids_request));
    if (message_arena != submessage_arena) {
      query_group_blocked_user_ids_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_group_blocked_user_ids_request, submessage_arena);
    }
    set_has_query_group_blocked_user_ids_request();
    _impl_.kind_.query_group_blocked_user_ids_request_ = query_group_blocked_user_ids_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_group_blocked_user_ids_request)
}
void TurmsRequest::clear_query_group_blocked_user_ids_request() {
  if (kind_case() == kQueryGroupBlockedUserIdsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_group_blocked_user_ids_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_group_blocked_user_infos_request(::turms::client::model::proto::QueryGroupBlockedUserInfosRequest* query_group_blocked_user_infos_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_group_blocked_user_infos_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_group_blocked_user_infos_request));
    if (message_arena != submessage_arena) {
      query_group_blocked_user_infos_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_group_blocked_user_infos_request, submessage_arena);
    }
    set_has_query_group_blocked_user_infos_request();
    _impl_.kind_.query_group_blocked_user_infos_request_ = query_group_blocked_user_infos_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_group_blocked_user_infos_request)
}
void TurmsRequest::clear_query_group_blocked_user_infos_request() {
  if (kind_case() == kQueryGroupBlockedUserInfosRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_group_blocked_user_infos_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_check_group_join_questions_answers_request(::turms::client::model::proto::CheckGroupJoinQuestionsAnswersRequest* check_group_join_questions_answers_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (check_group_join_questions_answers_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(check_group_join_questions_answers_request));
    if (message_arena != submessage_arena) {
      check_group_join_questions_answers_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, check_group_join_questions_answers_request, submessage_arena);
    }
    set_has_check_group_join_questions_answers_request();
    _impl_.kind_.check_group_join_questions_answers_request_ = check_group_join_questions_answers_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.check_group_join_questions_answers_request)
}
void TurmsRequest::clear_check_group_join_questions_answers_request() {
  if (kind_case() == kCheckGroupJoinQuestionsAnswersRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.check_group_join_questions_answers_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_group_invitation_request(::turms::client::model::proto::CreateGroupInvitationRequest* create_group_invitation_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_group_invitation_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_group_invitation_request));
    if (message_arena != submessage_arena) {
      create_group_invitation_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_group_invitation_request, submessage_arena);
    }
    set_has_create_group_invitation_request();
    _impl_.kind_.create_group_invitation_request_ = create_group_invitation_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_group_invitation_request)
}
void TurmsRequest::clear_create_group_invitation_request() {
  if (kind_case() == kCreateGroupInvitationRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_group_invitation_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_group_join_request_request(::turms::client::model::proto::CreateGroupJoinRequestRequest* create_group_join_request_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_group_join_request_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_group_join_request_request));
    if (message_arena != submessage_arena) {
      create_group_join_request_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_group_join_request_request, submessage_arena);
    }
    set_has_create_group_join_request_request();
    _impl_.kind_.create_group_join_request_request_ = create_group_join_request_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_group_join_request_request)
}
void TurmsRequest::clear_create_group_join_request_request() {
  if (kind_case() == kCreateGroupJoinRequestRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_group_join_request_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_create_group_join_questions_request(::turms::client::model::proto::CreateGroupJoinQuestionsRequest* create_group_join_questions_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (create_group_join_questions_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(create_group_join_questions_request));
    if (message_arena != submessage_arena) {
      create_group_join_questions_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_group_join_questions_request, submessage_arena);
    }
    set_has_create_group_join_questions_request();
    _impl_.kind_.create_group_join_questions_request_ = create_group_join_questions_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.create_group_join_questions_request)
}
void TurmsRequest::clear_create_group_join_questions_request() {
  if (kind_case() == kCreateGroupJoinQuestionsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.create_group_join_questions_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_group_invitation_request(::turms::client::model::proto::DeleteGroupInvitationRequest* delete_group_invitation_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_group_invitation_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_group_invitation_request));
    if (message_arena != submessage_arena) {
      delete_group_invitation_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_group_invitation_request, submessage_arena);
    }
    set_has_delete_group_invitation_request();
    _impl_.kind_.delete_group_invitation_request_ = delete_group_invitation_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_group_invitation_request)
}
void TurmsRequest::clear_delete_group_invitation_request() {
  if (kind_case() == kDeleteGroupInvitationRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_group_invitation_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_group_join_request_request(::turms::client::model::proto::DeleteGroupJoinRequestRequest* delete_group_join_request_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_group_join_request_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_group_join_request_request));
    if (message_arena != submessage_arena) {
      delete_group_join_request_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_group_join_request_request, submessage_arena);
    }
    set_has_delete_group_join_request_request();
    _impl_.kind_.delete_group_join_request_request_ = delete_group_join_request_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_group_join_request_request)
}
void TurmsRequest::clear_delete_group_join_request_request() {
  if (kind_case() == kDeleteGroupJoinRequestRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_group_join_request_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_group_join_questions_request(::turms::client::model::proto::DeleteGroupJoinQuestionsRequest* delete_group_join_questions_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_group_join_questions_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_group_join_questions_request));
    if (message_arena != submessage_arena) {
      delete_group_join_questions_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_group_join_questions_request, submessage_arena);
    }
    set_has_delete_group_join_questions_request();
    _impl_.kind_.delete_group_join_questions_request_ = delete_group_join_questions_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_group_join_questions_request)
}
void TurmsRequest::clear_delete_group_join_questions_request() {
  if (kind_case() == kDeleteGroupJoinQuestionsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_group_join_questions_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_group_invitations_request(::turms::client::model::proto::QueryGroupInvitationsRequest* query_group_invitations_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_group_invitations_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_group_invitations_request));
    if (message_arena != submessage_arena) {
      query_group_invitations_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_group_invitations_request, submessage_arena);
    }
    set_has_query_group_invitations_request();
    _impl_.kind_.query_group_invitations_request_ = query_group_invitations_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_group_invitations_request)
}
void TurmsRequest::clear_query_group_invitations_request() {
  if (kind_case() == kQueryGroupInvitationsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_group_invitations_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_group_join_requests_request(::turms::client::model::proto::QueryGroupJoinRequestsRequest* query_group_join_requests_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_group_join_requests_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_group_join_requests_request));
    if (message_arena != submessage_arena) {
      query_group_join_requests_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_group_join_requests_request, submessage_arena);
    }
    set_has_query_group_join_requests_request();
    _impl_.kind_.query_group_join_requests_request_ = query_group_join_requests_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_group_join_requests_request)
}
void TurmsRequest::clear_query_group_join_requests_request() {
  if (kind_case() == kQueryGroupJoinRequestsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_group_join_requests_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_group_join_questions_request(::turms::client::model::proto::QueryGroupJoinQuestionsRequest* query_group_join_questions_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_group_join_questions_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_group_join_questions_request));
    if (message_arena != submessage_arena) {
      query_group_join_questions_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_group_join_questions_request, submessage_arena);
    }
    set_has_query_group_join_questions_request();
    _impl_.kind_.query_group_join_questions_request_ = query_group_join_questions_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_group_join_questions_request)
}
void TurmsRequest::clear_query_group_join_questions_request() {
  if (kind_case() == kQueryGroupJoinQuestionsRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_group_join_questions_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_group_invitation_request(::turms::client::model::proto::UpdateGroupInvitationRequest* update_group_invitation_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_group_invitation_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_group_invitation_request));
    if (message_arena != submessage_arena) {
      update_group_invitation_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_group_invitation_request, submessage_arena);
    }
    set_has_update_group_invitation_request();
    _impl_.kind_.update_group_invitation_request_ = update_group_invitation_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_group_invitation_request)
}
void TurmsRequest::clear_update_group_invitation_request() {
  if (kind_case() == kUpdateGroupInvitationRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_group_invitation_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_group_join_question_request(::turms::client::model::proto::UpdateGroupJoinQuestionRequest* update_group_join_question_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_group_join_question_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_group_join_question_request));
    if (message_arena != submessage_arena) {
      update_group_join_question_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_group_join_question_request, submessage_arena);
    }
    set_has_update_group_join_question_request();
    _impl_.kind_.update_group_join_question_request_ = update_group_join_question_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_group_join_question_request)
}
void TurmsRequest::clear_update_group_join_question_request() {
  if (kind_case() == kUpdateGroupJoinQuestionRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_group_join_question_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_group_join_request_request(::turms::client::model::proto::UpdateGroupJoinRequestRequest* update_group_join_request_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_group_join_request_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_group_join_request_request));
    if (message_arena != submessage_arena) {
      update_group_join_request_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_group_join_request_request, submessage_arena);
    }
    set_has_update_group_join_request_request();
    _impl_.kind_.update_group_join_request_request_ = update_group_join_request_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_group_join_request_request)
}
void TurmsRequest::clear_update_group_join_request_request() {
  if (kind_case() == kUpdateGroupJoinRequestRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_group_join_request_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_delete_resource_request(::turms::client::model::proto::DeleteResourceRequest* delete_resource_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (delete_resource_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(delete_resource_request));
    if (message_arena != submessage_arena) {
      delete_resource_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_resource_request, submessage_arena);
    }
    set_has_delete_resource_request();
    _impl_.kind_.delete_resource_request_ = delete_resource_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.delete_resource_request)
}
void TurmsRequest::clear_delete_resource_request() {
  if (kind_case() == kDeleteResourceRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.delete_resource_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_resource_download_info_request(::turms::client::model::proto::QueryResourceDownloadInfoRequest* query_resource_download_info_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_resource_download_info_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_resource_download_info_request));
    if (message_arena != submessage_arena) {
      query_resource_download_info_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_resource_download_info_request, submessage_arena);
    }
    set_has_query_resource_download_info_request();
    _impl_.kind_.query_resource_download_info_request_ = query_resource_download_info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_resource_download_info_request)
}
void TurmsRequest::clear_query_resource_download_info_request() {
  if (kind_case() == kQueryResourceDownloadInfoRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_resource_download_info_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_resource_upload_info_request(::turms::client::model::proto::QueryResourceUploadInfoRequest* query_resource_upload_info_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_resource_upload_info_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_resource_upload_info_request));
    if (message_arena != submessage_arena) {
      query_resource_upload_info_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_resource_upload_info_request, submessage_arena);
    }
    set_has_query_resource_upload_info_request();
    _impl_.kind_.query_resource_upload_info_request_ = query_resource_upload_info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_resource_upload_info_request)
}
void TurmsRequest::clear_query_resource_upload_info_request() {
  if (kind_case() == kQueryResourceUploadInfoRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_resource_upload_info_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_query_message_attachment_infos_request(::turms::client::model::proto::QueryMessageAttachmentInfosRequest* query_message_attachment_infos_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (query_message_attachment_infos_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(query_message_attachment_infos_request));
    if (message_arena != submessage_arena) {
      query_message_attachment_infos_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, query_message_attachment_infos_request, submessage_arena);
    }
    set_has_query_message_attachment_infos_request();
    _impl_.kind_.query_message_attachment_infos_request_ = query_message_attachment_infos_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.query_message_attachment_infos_request)
}
void TurmsRequest::clear_query_message_attachment_infos_request() {
  if (kind_case() == kQueryMessageAttachmentInfosRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.query_message_attachment_infos_request_;
    }
    clear_has_kind();
  }
}
void TurmsRequest::set_allocated_update_message_attachment_info_request(::turms::client::model::proto::UpdateMessageAttachmentInfoRequest* update_message_attachment_info_request) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (update_message_attachment_info_request) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(
                reinterpret_cast<::google::protobuf::MessageLite*>(update_message_attachment_info_request));
    if (message_arena != submessage_arena) {
      update_message_attachment_info_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_message_attachment_info_request, submessage_arena);
    }
    set_has_update_message_attachment_info_request();
    _impl_.kind_.update_message_attachment_info_request_ = update_message_attachment_info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:turms.client.model.proto.TurmsRequest.update_message_attachment_info_request)
}
void TurmsRequest::clear_update_message_attachment_info_request() {
  if (kind_case() == kUpdateMessageAttachmentInfoRequest) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.kind_.update_message_attachment_info_request_;
    }
    clear_has_kind();
  }
}
TurmsRequest::TurmsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.TurmsRequest)
}
TurmsRequest::TurmsRequest(const TurmsRequest& from) : ::google::protobuf::MessageLite() {
  TurmsRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.request_id_){},
      decltype(_impl_.kind_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _this->_impl_.request_id_ = from._impl_.request_id_;
  clear_has_kind();
  switch (from.kind_case()) {
    case kCreateSessionRequest: {
      _this->_internal_mutable_create_session_request()->::turms::client::model::proto::CreateSessionRequest::MergeFrom(
          from._internal_create_session_request());
      break;
    }
    case kDeleteSessionRequest: {
      _this->_internal_mutable_delete_session_request()->::turms::client::model::proto::DeleteSessionRequest::MergeFrom(
          from._internal_delete_session_request());
      break;
    }
    case kQueryConversationsRequest: {
      _this->_internal_mutable_query_conversations_request()->::turms::client::model::proto::QueryConversationsRequest::MergeFrom(
          from._internal_query_conversations_request());
      break;
    }
    case kUpdateConversationRequest: {
      _this->_internal_mutable_update_conversation_request()->::turms::client::model::proto::UpdateConversationRequest::MergeFrom(
          from._internal_update_conversation_request());
      break;
    }
    case kUpdateTypingStatusRequest: {
      _this->_internal_mutable_update_typing_status_request()->::turms::client::model::proto::UpdateTypingStatusRequest::MergeFrom(
          from._internal_update_typing_status_request());
      break;
    }
    case kCreateMessageRequest: {
      _this->_internal_mutable_create_message_request()->::turms::client::model::proto::CreateMessageRequest::MergeFrom(
          from._internal_create_message_request());
      break;
    }
    case kQueryMessagesRequest: {
      _this->_internal_mutable_query_messages_request()->::turms::client::model::proto::QueryMessagesRequest::MergeFrom(
          from._internal_query_messages_request());
      break;
    }
    case kUpdateMessageRequest: {
      _this->_internal_mutable_update_message_request()->::turms::client::model::proto::UpdateMessageRequest::MergeFrom(
          from._internal_update_message_request());
      break;
    }
    case kCreateGroupMembersRequest: {
      _this->_internal_mutable_create_group_members_request()->::turms::client::model::proto::CreateGroupMembersRequest::MergeFrom(
          from._internal_create_group_members_request());
      break;
    }
    case kDeleteGroupMembersRequest: {
      _this->_internal_mutable_delete_group_members_request()->::turms::client::model::proto::DeleteGroupMembersRequest::MergeFrom(
          from._internal_delete_group_members_request());
      break;
    }
    case kQueryGroupMembersRequest: {
      _this->_internal_mutable_query_group_members_request()->::turms::client::model::proto::QueryGroupMembersRequest::MergeFrom(
          from._internal_query_group_members_request());
      break;
    }
    case kUpdateGroupMemberRequest: {
      _this->_internal_mutable_update_group_member_request()->::turms::client::model::proto::UpdateGroupMemberRequest::MergeFrom(
          from._internal_update_group_member_request());
      break;
    }
    case kQueryUserProfilesRequest: {
      _this->_internal_mutable_query_user_profiles_request()->::turms::client::model::proto::QueryUserProfilesRequest::MergeFrom(
          from._internal_query_user_profiles_request());
      break;
    }
    case kQueryNearbyUsersRequest: {
      _this->_internal_mutable_query_nearby_users_request()->::turms::client::model::proto::QueryNearbyUsersRequest::MergeFrom(
          from._internal_query_nearby_users_request());
      break;
    }
    case kQueryUserOnlineStatusesRequest: {
      _this->_internal_mutable_query_user_online_statuses_request()->::turms::client::model::proto::QueryUserOnlineStatusesRequest::MergeFrom(
          from._internal_query_user_online_statuses_request());
      break;
    }
    case kUpdateUserLocationRequest: {
      _this->_internal_mutable_update_user_location_request()->::turms::client::model::proto::UpdateUserLocationRequest::MergeFrom(
          from._internal_update_user_location_request());
      break;
    }
    case kUpdateUserOnlineStatusRequest: {
      _this->_internal_mutable_update_user_online_status_request()->::turms::client::model::proto::UpdateUserOnlineStatusRequest::MergeFrom(
          from._internal_update_user_online_status_request());
      break;
    }
    case kUpdateUserRequest: {
      _this->_internal_mutable_update_user_request()->::turms::client::model::proto::UpdateUserRequest::MergeFrom(
          from._internal_update_user_request());
      break;
    }
    case kCreateFriendRequestRequest: {
      _this->_internal_mutable_create_friend_request_request()->::turms::client::model::proto::CreateFriendRequestRequest::MergeFrom(
          from._internal_create_friend_request_request());
      break;
    }
    case kCreateRelationshipGroupRequest: {
      _this->_internal_mutable_create_relationship_group_request()->::turms::client::model::proto::CreateRelationshipGroupRequest::MergeFrom(
          from._internal_create_relationship_group_request());
      break;
    }
    case kCreateRelationshipRequest: {
      _this->_internal_mutable_create_relationship_request()->::turms::client::model::proto::CreateRelationshipRequest::MergeFrom(
          from._internal_create_relationship_request());
      break;
    }
    case kDeleteFriendRequestRequest: {
      _this->_internal_mutable_delete_friend_request_request()->::turms::client::model::proto::DeleteFriendRequestRequest::MergeFrom(
          from._internal_delete_friend_request_request());
      break;
    }
    case kDeleteRelationshipGroupRequest: {
      _this->_internal_mutable_delete_relationship_group_request()->::turms::client::model::proto::DeleteRelationshipGroupRequest::MergeFrom(
          from._internal_delete_relationship_group_request());
      break;
    }
    case kDeleteRelationshipRequest: {
      _this->_internal_mutable_delete_relationship_request()->::turms::client::model::proto::DeleteRelationshipRequest::MergeFrom(
          from._internal_delete_relationship_request());
      break;
    }
    case kQueryFriendRequestsRequest: {
      _this->_internal_mutable_query_friend_requests_request()->::turms::client::model::proto::QueryFriendRequestsRequest::MergeFrom(
          from._internal_query_friend_requests_request());
      break;
    }
    case kQueryRelatedUserIdsRequest: {
      _this->_internal_mutable_query_related_user_ids_request()->::turms::client::model::proto::QueryRelatedUserIdsRequest::MergeFrom(
          from._internal_query_related_user_ids_request());
      break;
    }
    case kQueryRelationshipGroupsRequest: {
      _this->_internal_mutable_query_relationship_groups_request()->::turms::client::model::proto::QueryRelationshipGroupsRequest::MergeFrom(
          from._internal_query_relationship_groups_request());
      break;
    }
    case kQueryRelationshipsRequest: {
      _this->_internal_mutable_query_relationships_request()->::turms::client::model::proto::QueryRelationshipsRequest::MergeFrom(
          from._internal_query_relationships_request());
      break;
    }
    case kUpdateFriendRequestRequest: {
      _this->_internal_mutable_update_friend_request_request()->::turms::client::model::proto::UpdateFriendRequestRequest::MergeFrom(
          from._internal_update_friend_request_request());
      break;
    }
    case kUpdateRelationshipGroupRequest: {
      _this->_internal_mutable_update_relationship_group_request()->::turms::client::model::proto::UpdateRelationshipGroupRequest::MergeFrom(
          from._internal_update_relationship_group_request());
      break;
    }
    case kUpdateRelationshipRequest: {
      _this->_internal_mutable_update_relationship_request()->::turms::client::model::proto::UpdateRelationshipRequest::MergeFrom(
          from._internal_update_relationship_request());
      break;
    }
    case kCreateGroupRequest: {
      _this->_internal_mutable_create_group_request()->::turms::client::model::proto::CreateGroupRequest::MergeFrom(
          from._internal_create_group_request());
      break;
    }
    case kDeleteGroupRequest: {
      _this->_internal_mutable_delete_group_request()->::turms::client::model::proto::DeleteGroupRequest::MergeFrom(
          from._internal_delete_group_request());
      break;
    }
    case kQueryGroupsRequest: {
      _this->_internal_mutable_query_groups_request()->::turms::client::model::proto::QueryGroupsRequest::MergeFrom(
          from._internal_query_groups_request());
      break;
    }
    case kQueryJoinedGroupIdsRequest: {
      _this->_internal_mutable_query_joined_group_ids_request()->::turms::client::model::proto::QueryJoinedGroupIdsRequest::MergeFrom(
          from._internal_query_joined_group_ids_request());
      break;
    }
    case kQueryJoinedGroupInfosRequest: {
      _this->_internal_mutable_query_joined_group_infos_request()->::turms::client::model::proto::QueryJoinedGroupInfosRequest::MergeFrom(
          from._internal_query_joined_group_infos_request());
      break;
    }
    case kUpdateGroupRequest: {
      _this->_internal_mutable_update_group_request()->::turms::client::model::proto::UpdateGroupRequest::MergeFrom(
          from._internal_update_group_request());
      break;
    }
    case kCreateGroupBlockedUserRequest: {
      _this->_internal_mutable_create_group_blocked_user_request()->::turms::client::model::proto::CreateGroupBlockedUserRequest::MergeFrom(
          from._internal_create_group_blocked_user_request());
      break;
    }
    case kDeleteGroupBlockedUserRequest: {
      _this->_internal_mutable_delete_group_blocked_user_request()->::turms::client::model::proto::DeleteGroupBlockedUserRequest::MergeFrom(
          from._internal_delete_group_blocked_user_request());
      break;
    }
    case kQueryGroupBlockedUserIdsRequest: {
      _this->_internal_mutable_query_group_blocked_user_ids_request()->::turms::client::model::proto::QueryGroupBlockedUserIdsRequest::MergeFrom(
          from._internal_query_group_blocked_user_ids_request());
      break;
    }
    case kQueryGroupBlockedUserInfosRequest: {
      _this->_internal_mutable_query_group_blocked_user_infos_request()->::turms::client::model::proto::QueryGroupBlockedUserInfosRequest::MergeFrom(
          from._internal_query_group_blocked_user_infos_request());
      break;
    }
    case kCheckGroupJoinQuestionsAnswersRequest: {
      _this->_internal_mutable_check_group_join_questions_answers_request()->::turms::client::model::proto::CheckGroupJoinQuestionsAnswersRequest::MergeFrom(
          from._internal_check_group_join_questions_answers_request());
      break;
    }
    case kCreateGroupInvitationRequest: {
      _this->_internal_mutable_create_group_invitation_request()->::turms::client::model::proto::CreateGroupInvitationRequest::MergeFrom(
          from._internal_create_group_invitation_request());
      break;
    }
    case kCreateGroupJoinRequestRequest: {
      _this->_internal_mutable_create_group_join_request_request()->::turms::client::model::proto::CreateGroupJoinRequestRequest::MergeFrom(
          from._internal_create_group_join_request_request());
      break;
    }
    case kCreateGroupJoinQuestionsRequest: {
      _this->_internal_mutable_create_group_join_questions_request()->::turms::client::model::proto::CreateGroupJoinQuestionsRequest::MergeFrom(
          from._internal_create_group_join_questions_request());
      break;
    }
    case kDeleteGroupInvitationRequest: {
      _this->_internal_mutable_delete_group_invitation_request()->::turms::client::model::proto::DeleteGroupInvitationRequest::MergeFrom(
          from._internal_delete_group_invitation_request());
      break;
    }
    case kDeleteGroupJoinRequestRequest: {
      _this->_internal_mutable_delete_group_join_request_request()->::turms::client::model::proto::DeleteGroupJoinRequestRequest::MergeFrom(
          from._internal_delete_group_join_request_request());
      break;
    }
    case kDeleteGroupJoinQuestionsRequest: {
      _this->_internal_mutable_delete_group_join_questions_request()->::turms::client::model::proto::DeleteGroupJoinQuestionsRequest::MergeFrom(
          from._internal_delete_group_join_questions_request());
      break;
    }
    case kQueryGroupInvitationsRequest: {
      _this->_internal_mutable_query_group_invitations_request()->::turms::client::model::proto::QueryGroupInvitationsRequest::MergeFrom(
          from._internal_query_group_invitations_request());
      break;
    }
    case kQueryGroupJoinRequestsRequest: {
      _this->_internal_mutable_query_group_join_requests_request()->::turms::client::model::proto::QueryGroupJoinRequestsRequest::MergeFrom(
          from._internal_query_group_join_requests_request());
      break;
    }
    case kQueryGroupJoinQuestionsRequest: {
      _this->_internal_mutable_query_group_join_questions_request()->::turms::client::model::proto::QueryGroupJoinQuestionsRequest::MergeFrom(
          from._internal_query_group_join_questions_request());
      break;
    }
    case kUpdateGroupInvitationRequest: {
      _this->_internal_mutable_update_group_invitation_request()->::turms::client::model::proto::UpdateGroupInvitationRequest::MergeFrom(
          from._internal_update_group_invitation_request());
      break;
    }
    case kUpdateGroupJoinQuestionRequest: {
      _this->_internal_mutable_update_group_join_question_request()->::turms::client::model::proto::UpdateGroupJoinQuestionRequest::MergeFrom(
          from._internal_update_group_join_question_request());
      break;
    }
    case kUpdateGroupJoinRequestRequest: {
      _this->_internal_mutable_update_group_join_request_request()->::turms::client::model::proto::UpdateGroupJoinRequestRequest::MergeFrom(
          from._internal_update_group_join_request_request());
      break;
    }
    case kDeleteResourceRequest: {
      _this->_internal_mutable_delete_resource_request()->::turms::client::model::proto::DeleteResourceRequest::MergeFrom(
          from._internal_delete_resource_request());
      break;
    }
    case kQueryResourceDownloadInfoRequest: {
      _this->_internal_mutable_query_resource_download_info_request()->::turms::client::model::proto::QueryResourceDownloadInfoRequest::MergeFrom(
          from._internal_query_resource_download_info_request());
      break;
    }
    case kQueryResourceUploadInfoRequest: {
      _this->_internal_mutable_query_resource_upload_info_request()->::turms::client::model::proto::QueryResourceUploadInfoRequest::MergeFrom(
          from._internal_query_resource_upload_info_request());
      break;
    }
    case kQueryMessageAttachmentInfosRequest: {
      _this->_internal_mutable_query_message_attachment_infos_request()->::turms::client::model::proto::QueryMessageAttachmentInfosRequest::MergeFrom(
          from._internal_query_message_attachment_infos_request());
      break;
    }
    case kUpdateMessageAttachmentInfoRequest: {
      _this->_internal_mutable_update_message_attachment_info_request()->::turms::client::model::proto::UpdateMessageAttachmentInfoRequest::MergeFrom(
          from._internal_update_message_attachment_info_request());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.TurmsRequest)
}
inline void TurmsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.request_id_){::int64_t{0}},
      decltype(_impl_.kind_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  clear_has_kind();
}
TurmsRequest::~TurmsRequest() {
  // @@protoc_insertion_point(destructor:turms.client.model.proto.TurmsRequest)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TurmsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
}
void TurmsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TurmsRequest::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:turms.client.model.proto.TurmsRequest)
  switch (kind_case()) {
    case kCreateSessionRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_session_request_;
      }
      break;
    }
    case kDeleteSessionRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_session_request_;
      }
      break;
    }
    case kQueryConversationsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_conversations_request_;
      }
      break;
    }
    case kUpdateConversationRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_conversation_request_;
      }
      break;
    }
    case kUpdateTypingStatusRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_typing_status_request_;
      }
      break;
    }
    case kCreateMessageRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_message_request_;
      }
      break;
    }
    case kQueryMessagesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_messages_request_;
      }
      break;
    }
    case kUpdateMessageRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_message_request_;
      }
      break;
    }
    case kCreateGroupMembersRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_group_members_request_;
      }
      break;
    }
    case kDeleteGroupMembersRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_group_members_request_;
      }
      break;
    }
    case kQueryGroupMembersRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_group_members_request_;
      }
      break;
    }
    case kUpdateGroupMemberRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_group_member_request_;
      }
      break;
    }
    case kQueryUserProfilesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_user_profiles_request_;
      }
      break;
    }
    case kQueryNearbyUsersRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_nearby_users_request_;
      }
      break;
    }
    case kQueryUserOnlineStatusesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_user_online_statuses_request_;
      }
      break;
    }
    case kUpdateUserLocationRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_user_location_request_;
      }
      break;
    }
    case kUpdateUserOnlineStatusRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_user_online_status_request_;
      }
      break;
    }
    case kUpdateUserRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_user_request_;
      }
      break;
    }
    case kCreateFriendRequestRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_friend_request_request_;
      }
      break;
    }
    case kCreateRelationshipGroupRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_relationship_group_request_;
      }
      break;
    }
    case kCreateRelationshipRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_relationship_request_;
      }
      break;
    }
    case kDeleteFriendRequestRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_friend_request_request_;
      }
      break;
    }
    case kDeleteRelationshipGroupRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_relationship_group_request_;
      }
      break;
    }
    case kDeleteRelationshipRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_relationship_request_;
      }
      break;
    }
    case kQueryFriendRequestsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_friend_requests_request_;
      }
      break;
    }
    case kQueryRelatedUserIdsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_related_user_ids_request_;
      }
      break;
    }
    case kQueryRelationshipGroupsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_relationship_groups_request_;
      }
      break;
    }
    case kQueryRelationshipsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_relationships_request_;
      }
      break;
    }
    case kUpdateFriendRequestRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_friend_request_request_;
      }
      break;
    }
    case kUpdateRelationshipGroupRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_relationship_group_request_;
      }
      break;
    }
    case kUpdateRelationshipRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_relationship_request_;
      }
      break;
    }
    case kCreateGroupRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_group_request_;
      }
      break;
    }
    case kDeleteGroupRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_group_request_;
      }
      break;
    }
    case kQueryGroupsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_groups_request_;
      }
      break;
    }
    case kQueryJoinedGroupIdsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_joined_group_ids_request_;
      }
      break;
    }
    case kQueryJoinedGroupInfosRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_joined_group_infos_request_;
      }
      break;
    }
    case kUpdateGroupRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_group_request_;
      }
      break;
    }
    case kCreateGroupBlockedUserRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_group_blocked_user_request_;
      }
      break;
    }
    case kDeleteGroupBlockedUserRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_group_blocked_user_request_;
      }
      break;
    }
    case kQueryGroupBlockedUserIdsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_group_blocked_user_ids_request_;
      }
      break;
    }
    case kQueryGroupBlockedUserInfosRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_group_blocked_user_infos_request_;
      }
      break;
    }
    case kCheckGroupJoinQuestionsAnswersRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.check_group_join_questions_answers_request_;
      }
      break;
    }
    case kCreateGroupInvitationRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_group_invitation_request_;
      }
      break;
    }
    case kCreateGroupJoinRequestRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_group_join_request_request_;
      }
      break;
    }
    case kCreateGroupJoinQuestionsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.create_group_join_questions_request_;
      }
      break;
    }
    case kDeleteGroupInvitationRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_group_invitation_request_;
      }
      break;
    }
    case kDeleteGroupJoinRequestRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_group_join_request_request_;
      }
      break;
    }
    case kDeleteGroupJoinQuestionsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_group_join_questions_request_;
      }
      break;
    }
    case kQueryGroupInvitationsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_group_invitations_request_;
      }
      break;
    }
    case kQueryGroupJoinRequestsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_group_join_requests_request_;
      }
      break;
    }
    case kQueryGroupJoinQuestionsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_group_join_questions_request_;
      }
      break;
    }
    case kUpdateGroupInvitationRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_group_invitation_request_;
      }
      break;
    }
    case kUpdateGroupJoinQuestionRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_group_join_question_request_;
      }
      break;
    }
    case kUpdateGroupJoinRequestRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_group_join_request_request_;
      }
      break;
    }
    case kDeleteResourceRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.delete_resource_request_;
      }
      break;
    }
    case kQueryResourceDownloadInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_resource_download_info_request_;
      }
      break;
    }
    case kQueryResourceUploadInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_resource_upload_info_request_;
      }
      break;
    }
    case kQueryMessageAttachmentInfosRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.query_message_attachment_infos_request_;
      }
      break;
    }
    case kUpdateMessageAttachmentInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.update_message_attachment_info_request_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


PROTOBUF_NOINLINE void TurmsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:turms.client.model.proto.TurmsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_ = ::int64_t{0};
  clear_kind();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TurmsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 60, 59, 0, 32> TurmsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1004, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950914,  // skipmap
    offsetof(decltype(_table_), field_entries),
    60,  // num_field_entries
    59,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TurmsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional int64 request_id = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.request_id_)}},
  }}, {{
    100, 0, 1,
    65472, 13,200, 0, 1,
     57344, 19,300, 0, 1,
     65472, 32,400, 0, 1,
     65520, 38,500, 0, 1,
     57344, 42,1000, 0, 1,
     65504, 55,
    65535, 65535
  }}, {{
    // optional int64 request_id = 1;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.request_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .turms.client.model.proto.CreateSessionRequest create_session_request = 3;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_session_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteSessionRequest delete_session_request = 4;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_session_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryConversationsRequest query_conversations_request = 5;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_conversations_request_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateConversationRequest update_conversation_request = 6;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_conversation_request_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateTypingStatusRequest update_typing_status_request = 7;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_typing_status_request_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateMessageRequest create_message_request = 8;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_message_request_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryMessagesRequest query_messages_request = 9;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_messages_request_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateMessageRequest update_message_request = 10;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_message_request_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateGroupMembersRequest create_group_members_request = 11;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_group_members_request_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteGroupMembersRequest delete_group_members_request = 12;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_group_members_request_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupMembersRequest query_group_members_request = 13;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_group_members_request_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateGroupMemberRequest update_group_member_request = 14;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_group_member_request_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryUserProfilesRequest query_user_profiles_request = 100;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_user_profiles_request_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryNearbyUsersRequest query_nearby_users_request = 101;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_nearby_users_request_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryUserOnlineStatusesRequest query_user_online_statuses_request = 102;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_user_online_statuses_request_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateUserLocationRequest update_user_location_request = 103;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_user_location_request_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateUserOnlineStatusRequest update_user_online_status_request = 104;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_user_online_status_request_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateUserRequest update_user_request = 105;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_user_request_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateFriendRequestRequest create_friend_request_request = 200;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_friend_request_request_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateRelationshipGroupRequest create_relationship_group_request = 201;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_relationship_group_request_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateRelationshipRequest create_relationship_request = 202;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_relationship_request_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteFriendRequestRequest delete_friend_request_request = 203;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_friend_request_request_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteRelationshipGroupRequest delete_relationship_group_request = 204;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_relationship_group_request_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteRelationshipRequest delete_relationship_request = 205;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_relationship_request_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryFriendRequestsRequest query_friend_requests_request = 206;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_friend_requests_request_), _Internal::kOneofCaseOffset + 0, 24,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryRelatedUserIdsRequest query_related_user_ids_request = 207;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_related_user_ids_request_), _Internal::kOneofCaseOffset + 0, 25,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryRelationshipGroupsRequest query_relationship_groups_request = 208;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_relationship_groups_request_), _Internal::kOneofCaseOffset + 0, 26,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryRelationshipsRequest query_relationships_request = 209;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_relationships_request_), _Internal::kOneofCaseOffset + 0, 27,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateFriendRequestRequest update_friend_request_request = 210;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_friend_request_request_), _Internal::kOneofCaseOffset + 0, 28,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateRelationshipGroupRequest update_relationship_group_request = 211;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_relationship_group_request_), _Internal::kOneofCaseOffset + 0, 29,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateRelationshipRequest update_relationship_request = 212;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_relationship_request_), _Internal::kOneofCaseOffset + 0, 30,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateGroupRequest create_group_request = 300;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_group_request_), _Internal::kOneofCaseOffset + 0, 31,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteGroupRequest delete_group_request = 301;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_group_request_), _Internal::kOneofCaseOffset + 0, 32,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupsRequest query_groups_request = 302;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_groups_request_), _Internal::kOneofCaseOffset + 0, 33,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryJoinedGroupIdsRequest query_joined_group_ids_request = 303;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_joined_group_ids_request_), _Internal::kOneofCaseOffset + 0, 34,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryJoinedGroupInfosRequest query_joined_group_infos_request = 304;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_joined_group_infos_request_), _Internal::kOneofCaseOffset + 0, 35,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateGroupRequest update_group_request = 305;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_group_request_), _Internal::kOneofCaseOffset + 0, 36,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateGroupBlockedUserRequest create_group_blocked_user_request = 400;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_group_blocked_user_request_), _Internal::kOneofCaseOffset + 0, 37,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteGroupBlockedUserRequest delete_group_blocked_user_request = 401;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_group_blocked_user_request_), _Internal::kOneofCaseOffset + 0, 38,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupBlockedUserIdsRequest query_group_blocked_user_ids_request = 402;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_group_blocked_user_ids_request_), _Internal::kOneofCaseOffset + 0, 39,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupBlockedUserInfosRequest query_group_blocked_user_infos_request = 403;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_group_blocked_user_infos_request_), _Internal::kOneofCaseOffset + 0, 40,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CheckGroupJoinQuestionsAnswersRequest check_group_join_questions_answers_request = 500;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.check_group_join_questions_answers_request_), _Internal::kOneofCaseOffset + 0, 41,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateGroupInvitationRequest create_group_invitation_request = 501;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_group_invitation_request_), _Internal::kOneofCaseOffset + 0, 42,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateGroupJoinRequestRequest create_group_join_request_request = 502;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_group_join_request_request_), _Internal::kOneofCaseOffset + 0, 43,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.CreateGroupJoinQuestionsRequest create_group_join_questions_request = 503;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.create_group_join_questions_request_), _Internal::kOneofCaseOffset + 0, 44,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteGroupInvitationRequest delete_group_invitation_request = 504;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_group_invitation_request_), _Internal::kOneofCaseOffset + 0, 45,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteGroupJoinRequestRequest delete_group_join_request_request = 505;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_group_join_request_request_), _Internal::kOneofCaseOffset + 0, 46,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteGroupJoinQuestionsRequest delete_group_join_questions_request = 506;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_group_join_questions_request_), _Internal::kOneofCaseOffset + 0, 47,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupInvitationsRequest query_group_invitations_request = 507;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_group_invitations_request_), _Internal::kOneofCaseOffset + 0, 48,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupJoinRequestsRequest query_group_join_requests_request = 508;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_group_join_requests_request_), _Internal::kOneofCaseOffset + 0, 49,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryGroupJoinQuestionsRequest query_group_join_questions_request = 509;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_group_join_questions_request_), _Internal::kOneofCaseOffset + 0, 50,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateGroupInvitationRequest update_group_invitation_request = 510;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_group_invitation_request_), _Internal::kOneofCaseOffset + 0, 51,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateGroupJoinQuestionRequest update_group_join_question_request = 511;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_group_join_question_request_), _Internal::kOneofCaseOffset + 0, 52,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateGroupJoinRequestRequest update_group_join_request_request = 512;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_group_join_request_request_), _Internal::kOneofCaseOffset + 0, 53,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.DeleteResourceRequest delete_resource_request = 1000;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.delete_resource_request_), _Internal::kOneofCaseOffset + 0, 54,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryResourceDownloadInfoRequest query_resource_download_info_request = 1001;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_resource_download_info_request_), _Internal::kOneofCaseOffset + 0, 55,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryResourceUploadInfoRequest query_resource_upload_info_request = 1002;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_resource_upload_info_request_), _Internal::kOneofCaseOffset + 0, 56,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.QueryMessageAttachmentInfosRequest query_message_attachment_infos_request = 1003;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.query_message_attachment_infos_request_), _Internal::kOneofCaseOffset + 0, 57,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .turms.client.model.proto.UpdateMessageAttachmentInfoRequest update_message_attachment_info_request = 1004;
    {PROTOBUF_FIELD_OFFSET(TurmsRequest, _impl_.kind_.update_message_attachment_info_request_), _Internal::kOneofCaseOffset + 0, 58,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateSessionRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteSessionRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryConversationsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateConversationRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateTypingStatusRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateMessageRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryMessagesRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateMessageRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateGroupMembersRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteGroupMembersRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupMembersRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateGroupMemberRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryUserProfilesRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryNearbyUsersRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryUserOnlineStatusesRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateUserLocationRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateUserOnlineStatusRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateUserRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateFriendRequestRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateRelationshipGroupRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateRelationshipRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteFriendRequestRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteRelationshipGroupRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteRelationshipRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryFriendRequestsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryRelatedUserIdsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryRelationshipGroupsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryRelationshipsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateFriendRequestRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateRelationshipGroupRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateRelationshipRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateGroupRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteGroupRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryJoinedGroupIdsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryJoinedGroupInfosRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateGroupRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateGroupBlockedUserRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteGroupBlockedUserRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupBlockedUserIdsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupBlockedUserInfosRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CheckGroupJoinQuestionsAnswersRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateGroupInvitationRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateGroupJoinRequestRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::CreateGroupJoinQuestionsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteGroupInvitationRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteGroupJoinRequestRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteGroupJoinQuestionsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupInvitationsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupJoinRequestsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryGroupJoinQuestionsRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateGroupInvitationRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateGroupJoinQuestionRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateGroupJoinRequestRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::DeleteResourceRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryResourceDownloadInfoRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryResourceUploadInfoRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::QueryMessageAttachmentInfosRequest>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::UpdateMessageAttachmentInfoRequest>()},
  }}, {{
  }},
};

::uint8_t* TurmsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.TurmsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_request_id(), target);
  }

  switch (kind_case()) {
    case kCreateSessionRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::create_session_request(this),
          _Internal::create_session_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteSessionRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, _Internal::delete_session_request(this),
          _Internal::delete_session_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryConversationsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, _Internal::query_conversations_request(this),
          _Internal::query_conversations_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateConversationRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, _Internal::update_conversation_request(this),
          _Internal::update_conversation_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateTypingStatusRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, _Internal::update_typing_status_request(this),
          _Internal::update_typing_status_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateMessageRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, _Internal::create_message_request(this),
          _Internal::create_message_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryMessagesRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, _Internal::query_messages_request(this),
          _Internal::query_messages_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateMessageRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, _Internal::update_message_request(this),
          _Internal::update_message_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateGroupMembersRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, _Internal::create_group_members_request(this),
          _Internal::create_group_members_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteGroupMembersRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, _Internal::delete_group_members_request(this),
          _Internal::delete_group_members_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupMembersRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(13, _Internal::query_group_members_request(this),
          _Internal::query_group_members_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateGroupMemberRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(14, _Internal::update_group_member_request(this),
          _Internal::update_group_member_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryUserProfilesRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(100, _Internal::query_user_profiles_request(this),
          _Internal::query_user_profiles_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryNearbyUsersRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(101, _Internal::query_nearby_users_request(this),
          _Internal::query_nearby_users_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryUserOnlineStatusesRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(102, _Internal::query_user_online_statuses_request(this),
          _Internal::query_user_online_statuses_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateUserLocationRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(103, _Internal::update_user_location_request(this),
          _Internal::update_user_location_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateUserOnlineStatusRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(104, _Internal::update_user_online_status_request(this),
          _Internal::update_user_online_status_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateUserRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(105, _Internal::update_user_request(this),
          _Internal::update_user_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateFriendRequestRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(200, _Internal::create_friend_request_request(this),
          _Internal::create_friend_request_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateRelationshipGroupRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(201, _Internal::create_relationship_group_request(this),
          _Internal::create_relationship_group_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateRelationshipRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(202, _Internal::create_relationship_request(this),
          _Internal::create_relationship_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteFriendRequestRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(203, _Internal::delete_friend_request_request(this),
          _Internal::delete_friend_request_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteRelationshipGroupRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(204, _Internal::delete_relationship_group_request(this),
          _Internal::delete_relationship_group_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteRelationshipRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(205, _Internal::delete_relationship_request(this),
          _Internal::delete_relationship_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryFriendRequestsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(206, _Internal::query_friend_requests_request(this),
          _Internal::query_friend_requests_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryRelatedUserIdsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(207, _Internal::query_related_user_ids_request(this),
          _Internal::query_related_user_ids_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryRelationshipGroupsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(208, _Internal::query_relationship_groups_request(this),
          _Internal::query_relationship_groups_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryRelationshipsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(209, _Internal::query_relationships_request(this),
          _Internal::query_relationships_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateFriendRequestRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(210, _Internal::update_friend_request_request(this),
          _Internal::update_friend_request_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateRelationshipGroupRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(211, _Internal::update_relationship_group_request(this),
          _Internal::update_relationship_group_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateRelationshipRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(212, _Internal::update_relationship_request(this),
          _Internal::update_relationship_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateGroupRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(300, _Internal::create_group_request(this),
          _Internal::create_group_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteGroupRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(301, _Internal::delete_group_request(this),
          _Internal::delete_group_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(302, _Internal::query_groups_request(this),
          _Internal::query_groups_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryJoinedGroupIdsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(303, _Internal::query_joined_group_ids_request(this),
          _Internal::query_joined_group_ids_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryJoinedGroupInfosRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(304, _Internal::query_joined_group_infos_request(this),
          _Internal::query_joined_group_infos_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateGroupRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(305, _Internal::update_group_request(this),
          _Internal::update_group_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateGroupBlockedUserRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(400, _Internal::create_group_blocked_user_request(this),
          _Internal::create_group_blocked_user_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteGroupBlockedUserRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(401, _Internal::delete_group_blocked_user_request(this),
          _Internal::delete_group_blocked_user_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupBlockedUserIdsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(402, _Internal::query_group_blocked_user_ids_request(this),
          _Internal::query_group_blocked_user_ids_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupBlockedUserInfosRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(403, _Internal::query_group_blocked_user_infos_request(this),
          _Internal::query_group_blocked_user_infos_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCheckGroupJoinQuestionsAnswersRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(500, _Internal::check_group_join_questions_answers_request(this),
          _Internal::check_group_join_questions_answers_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateGroupInvitationRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(501, _Internal::create_group_invitation_request(this),
          _Internal::create_group_invitation_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateGroupJoinRequestRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(502, _Internal::create_group_join_request_request(this),
          _Internal::create_group_join_request_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateGroupJoinQuestionsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(503, _Internal::create_group_join_questions_request(this),
          _Internal::create_group_join_questions_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteGroupInvitationRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(504, _Internal::delete_group_invitation_request(this),
          _Internal::delete_group_invitation_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteGroupJoinRequestRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(505, _Internal::delete_group_join_request_request(this),
          _Internal::delete_group_join_request_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteGroupJoinQuestionsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(506, _Internal::delete_group_join_questions_request(this),
          _Internal::delete_group_join_questions_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupInvitationsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(507, _Internal::query_group_invitations_request(this),
          _Internal::query_group_invitations_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupJoinRequestsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(508, _Internal::query_group_join_requests_request(this),
          _Internal::query_group_join_requests_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryGroupJoinQuestionsRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(509, _Internal::query_group_join_questions_request(this),
          _Internal::query_group_join_questions_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateGroupInvitationRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(510, _Internal::update_group_invitation_request(this),
          _Internal::update_group_invitation_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateGroupJoinQuestionRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(511, _Internal::update_group_join_question_request(this),
          _Internal::update_group_join_question_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateGroupJoinRequestRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(512, _Internal::update_group_join_request_request(this),
          _Internal::update_group_join_request_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kDeleteResourceRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1000, _Internal::delete_resource_request(this),
          _Internal::delete_resource_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryResourceDownloadInfoRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1001, _Internal::query_resource_download_info_request(this),
          _Internal::query_resource_download_info_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryResourceUploadInfoRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1002, _Internal::query_resource_upload_info_request(this),
          _Internal::query_resource_upload_info_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kQueryMessageAttachmentInfosRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1003, _Internal::query_message_attachment_infos_request(this),
          _Internal::query_message_attachment_infos_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateMessageAttachmentInfoRequest: {
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1004, _Internal::update_message_attachment_info_request(this),
          _Internal::update_message_attachment_info_request(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.TurmsRequest)
  return target;
}

::size_t TurmsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.TurmsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 request_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_request_id());
  }

  switch (kind_case()) {
    // .turms.client.model.proto.CreateSessionRequest create_session_request = 3;
    case kCreateSessionRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_session_request_);
      break;
    }
    // .turms.client.model.proto.DeleteSessionRequest delete_session_request = 4;
    case kDeleteSessionRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_session_request_);
      break;
    }
    // .turms.client.model.proto.QueryConversationsRequest query_conversations_request = 5;
    case kQueryConversationsRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_conversations_request_);
      break;
    }
    // .turms.client.model.proto.UpdateConversationRequest update_conversation_request = 6;
    case kUpdateConversationRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_conversation_request_);
      break;
    }
    // .turms.client.model.proto.UpdateTypingStatusRequest update_typing_status_request = 7;
    case kUpdateTypingStatusRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_typing_status_request_);
      break;
    }
    // .turms.client.model.proto.CreateMessageRequest create_message_request = 8;
    case kCreateMessageRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_message_request_);
      break;
    }
    // .turms.client.model.proto.QueryMessagesRequest query_messages_request = 9;
    case kQueryMessagesRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_messages_request_);
      break;
    }
    // .turms.client.model.proto.UpdateMessageRequest update_message_request = 10;
    case kUpdateMessageRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_message_request_);
      break;
    }
    // .turms.client.model.proto.CreateGroupMembersRequest create_group_members_request = 11;
    case kCreateGroupMembersRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_group_members_request_);
      break;
    }
    // .turms.client.model.proto.DeleteGroupMembersRequest delete_group_members_request = 12;
    case kDeleteGroupMembersRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_group_members_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupMembersRequest query_group_members_request = 13;
    case kQueryGroupMembersRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_group_members_request_);
      break;
    }
    // .turms.client.model.proto.UpdateGroupMemberRequest update_group_member_request = 14;
    case kUpdateGroupMemberRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_group_member_request_);
      break;
    }
    // .turms.client.model.proto.QueryUserProfilesRequest query_user_profiles_request = 100;
    case kQueryUserProfilesRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_user_profiles_request_);
      break;
    }
    // .turms.client.model.proto.QueryNearbyUsersRequest query_nearby_users_request = 101;
    case kQueryNearbyUsersRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_nearby_users_request_);
      break;
    }
    // .turms.client.model.proto.QueryUserOnlineStatusesRequest query_user_online_statuses_request = 102;
    case kQueryUserOnlineStatusesRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_user_online_statuses_request_);
      break;
    }
    // .turms.client.model.proto.UpdateUserLocationRequest update_user_location_request = 103;
    case kUpdateUserLocationRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_user_location_request_);
      break;
    }
    // .turms.client.model.proto.UpdateUserOnlineStatusRequest update_user_online_status_request = 104;
    case kUpdateUserOnlineStatusRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_user_online_status_request_);
      break;
    }
    // .turms.client.model.proto.UpdateUserRequest update_user_request = 105;
    case kUpdateUserRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_user_request_);
      break;
    }
    // .turms.client.model.proto.CreateFriendRequestRequest create_friend_request_request = 200;
    case kCreateFriendRequestRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_friend_request_request_);
      break;
    }
    // .turms.client.model.proto.CreateRelationshipGroupRequest create_relationship_group_request = 201;
    case kCreateRelationshipGroupRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_relationship_group_request_);
      break;
    }
    // .turms.client.model.proto.CreateRelationshipRequest create_relationship_request = 202;
    case kCreateRelationshipRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_relationship_request_);
      break;
    }
    // .turms.client.model.proto.DeleteFriendRequestRequest delete_friend_request_request = 203;
    case kDeleteFriendRequestRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_friend_request_request_);
      break;
    }
    // .turms.client.model.proto.DeleteRelationshipGroupRequest delete_relationship_group_request = 204;
    case kDeleteRelationshipGroupRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_relationship_group_request_);
      break;
    }
    // .turms.client.model.proto.DeleteRelationshipRequest delete_relationship_request = 205;
    case kDeleteRelationshipRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_relationship_request_);
      break;
    }
    // .turms.client.model.proto.QueryFriendRequestsRequest query_friend_requests_request = 206;
    case kQueryFriendRequestsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_friend_requests_request_);
      break;
    }
    // .turms.client.model.proto.QueryRelatedUserIdsRequest query_related_user_ids_request = 207;
    case kQueryRelatedUserIdsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_related_user_ids_request_);
      break;
    }
    // .turms.client.model.proto.QueryRelationshipGroupsRequest query_relationship_groups_request = 208;
    case kQueryRelationshipGroupsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_relationship_groups_request_);
      break;
    }
    // .turms.client.model.proto.QueryRelationshipsRequest query_relationships_request = 209;
    case kQueryRelationshipsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_relationships_request_);
      break;
    }
    // .turms.client.model.proto.UpdateFriendRequestRequest update_friend_request_request = 210;
    case kUpdateFriendRequestRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_friend_request_request_);
      break;
    }
    // .turms.client.model.proto.UpdateRelationshipGroupRequest update_relationship_group_request = 211;
    case kUpdateRelationshipGroupRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_relationship_group_request_);
      break;
    }
    // .turms.client.model.proto.UpdateRelationshipRequest update_relationship_request = 212;
    case kUpdateRelationshipRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_relationship_request_);
      break;
    }
    // .turms.client.model.proto.CreateGroupRequest create_group_request = 300;
    case kCreateGroupRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_group_request_);
      break;
    }
    // .turms.client.model.proto.DeleteGroupRequest delete_group_request = 301;
    case kDeleteGroupRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_group_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupsRequest query_groups_request = 302;
    case kQueryGroupsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_groups_request_);
      break;
    }
    // .turms.client.model.proto.QueryJoinedGroupIdsRequest query_joined_group_ids_request = 303;
    case kQueryJoinedGroupIdsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_joined_group_ids_request_);
      break;
    }
    // .turms.client.model.proto.QueryJoinedGroupInfosRequest query_joined_group_infos_request = 304;
    case kQueryJoinedGroupInfosRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_joined_group_infos_request_);
      break;
    }
    // .turms.client.model.proto.UpdateGroupRequest update_group_request = 305;
    case kUpdateGroupRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_group_request_);
      break;
    }
    // .turms.client.model.proto.CreateGroupBlockedUserRequest create_group_blocked_user_request = 400;
    case kCreateGroupBlockedUserRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_group_blocked_user_request_);
      break;
    }
    // .turms.client.model.proto.DeleteGroupBlockedUserRequest delete_group_blocked_user_request = 401;
    case kDeleteGroupBlockedUserRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_group_blocked_user_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupBlockedUserIdsRequest query_group_blocked_user_ids_request = 402;
    case kQueryGroupBlockedUserIdsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_group_blocked_user_ids_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupBlockedUserInfosRequest query_group_blocked_user_infos_request = 403;
    case kQueryGroupBlockedUserInfosRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_group_blocked_user_infos_request_);
      break;
    }
    // .turms.client.model.proto.CheckGroupJoinQuestionsAnswersRequest check_group_join_questions_answers_request = 500;
    case kCheckGroupJoinQuestionsAnswersRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.check_group_join_questions_answers_request_);
      break;
    }
    // .turms.client.model.proto.CreateGroupInvitationRequest create_group_invitation_request = 501;
    case kCreateGroupInvitationRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_group_invitation_request_);
      break;
    }
    // .turms.client.model.proto.CreateGroupJoinRequestRequest create_group_join_request_request = 502;
    case kCreateGroupJoinRequestRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_group_join_request_request_);
      break;
    }
    // .turms.client.model.proto.CreateGroupJoinQuestionsRequest create_group_join_questions_request = 503;
    case kCreateGroupJoinQuestionsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.create_group_join_questions_request_);
      break;
    }
    // .turms.client.model.proto.DeleteGroupInvitationRequest delete_group_invitation_request = 504;
    case kDeleteGroupInvitationRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_group_invitation_request_);
      break;
    }
    // .turms.client.model.proto.DeleteGroupJoinRequestRequest delete_group_join_request_request = 505;
    case kDeleteGroupJoinRequestRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_group_join_request_request_);
      break;
    }
    // .turms.client.model.proto.DeleteGroupJoinQuestionsRequest delete_group_join_questions_request = 506;
    case kDeleteGroupJoinQuestionsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_group_join_questions_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupInvitationsRequest query_group_invitations_request = 507;
    case kQueryGroupInvitationsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_group_invitations_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupJoinRequestsRequest query_group_join_requests_request = 508;
    case kQueryGroupJoinRequestsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_group_join_requests_request_);
      break;
    }
    // .turms.client.model.proto.QueryGroupJoinQuestionsRequest query_group_join_questions_request = 509;
    case kQueryGroupJoinQuestionsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_group_join_questions_request_);
      break;
    }
    // .turms.client.model.proto.UpdateGroupInvitationRequest update_group_invitation_request = 510;
    case kUpdateGroupInvitationRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_group_invitation_request_);
      break;
    }
    // .turms.client.model.proto.UpdateGroupJoinQuestionRequest update_group_join_question_request = 511;
    case kUpdateGroupJoinQuestionRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_group_join_question_request_);
      break;
    }
    // .turms.client.model.proto.UpdateGroupJoinRequestRequest update_group_join_request_request = 512;
    case kUpdateGroupJoinRequestRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_group_join_request_request_);
      break;
    }
    // .turms.client.model.proto.DeleteResourceRequest delete_resource_request = 1000;
    case kDeleteResourceRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.delete_resource_request_);
      break;
    }
    // .turms.client.model.proto.QueryResourceDownloadInfoRequest query_resource_download_info_request = 1001;
    case kQueryResourceDownloadInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_resource_download_info_request_);
      break;
    }
    // .turms.client.model.proto.QueryResourceUploadInfoRequest query_resource_upload_info_request = 1002;
    case kQueryResourceUploadInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_resource_upload_info_request_);
      break;
    }
    // .turms.client.model.proto.QueryMessageAttachmentInfosRequest query_message_attachment_infos_request = 1003;
    case kQueryMessageAttachmentInfosRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.query_message_attachment_infos_request_);
      break;
    }
    // .turms.client.model.proto.UpdateMessageAttachmentInfoRequest update_message_attachment_info_request = 1004;
    case kUpdateMessageAttachmentInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.update_message_attachment_info_request_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TurmsRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TurmsRequest*>(
      &from));
}

void TurmsRequest::MergeFrom(const TurmsRequest& from) {
  TurmsRequest* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.TurmsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  switch (from.kind_case()) {
    case kCreateSessionRequest: {
      _this->_internal_mutable_create_session_request()->::turms::client::model::proto::CreateSessionRequest::MergeFrom(
          from._internal_create_session_request());
      break;
    }
    case kDeleteSessionRequest: {
      _this->_internal_mutable_delete_session_request()->::turms::client::model::proto::DeleteSessionRequest::MergeFrom(
          from._internal_delete_session_request());
      break;
    }
    case kQueryConversationsRequest: {
      _this->_internal_mutable_query_conversations_request()->::turms::client::model::proto::QueryConversationsRequest::MergeFrom(
          from._internal_query_conversations_request());
      break;
    }
    case kUpdateConversationRequest: {
      _this->_internal_mutable_update_conversation_request()->::turms::client::model::proto::UpdateConversationRequest::MergeFrom(
          from._internal_update_conversation_request());
      break;
    }
    case kUpdateTypingStatusRequest: {
      _this->_internal_mutable_update_typing_status_request()->::turms::client::model::proto::UpdateTypingStatusRequest::MergeFrom(
          from._internal_update_typing_status_request());
      break;
    }
    case kCreateMessageRequest: {
      _this->_internal_mutable_create_message_request()->::turms::client::model::proto::CreateMessageRequest::MergeFrom(
          from._internal_create_message_request());
      break;
    }
    case kQueryMessagesRequest: {
      _this->_internal_mutable_query_messages_request()->::turms::client::model::proto::QueryMessagesRequest::MergeFrom(
          from._internal_query_messages_request());
      break;
    }
    case kUpdateMessageRequest: {
      _this->_internal_mutable_update_message_request()->::turms::client::model::proto::UpdateMessageRequest::MergeFrom(
          from._internal_update_message_request());
      break;
    }
    case kCreateGroupMembersRequest: {
      _this->_internal_mutable_create_group_members_request()->::turms::client::model::proto::CreateGroupMembersRequest::MergeFrom(
          from._internal_create_group_members_request());
      break;
    }
    case kDeleteGroupMembersRequest: {
      _this->_internal_mutable_delete_group_members_request()->::turms::client::model::proto::DeleteGroupMembersRequest::MergeFrom(
          from._internal_delete_group_members_request());
      break;
    }
    case kQueryGroupMembersRequest: {
      _this->_internal_mutable_query_group_members_request()->::turms::client::model::proto::QueryGroupMembersRequest::MergeFrom(
          from._internal_query_group_members_request());
      break;
    }
    case kUpdateGroupMemberRequest: {
      _this->_internal_mutable_update_group_member_request()->::turms::client::model::proto::UpdateGroupMemberRequest::MergeFrom(
          from._internal_update_group_member_request());
      break;
    }
    case kQueryUserProfilesRequest: {
      _this->_internal_mutable_query_user_profiles_request()->::turms::client::model::proto::QueryUserProfilesRequest::MergeFrom(
          from._internal_query_user_profiles_request());
      break;
    }
    case kQueryNearbyUsersRequest: {
      _this->_internal_mutable_query_nearby_users_request()->::turms::client::model::proto::QueryNearbyUsersRequest::MergeFrom(
          from._internal_query_nearby_users_request());
      break;
    }
    case kQueryUserOnlineStatusesRequest: {
      _this->_internal_mutable_query_user_online_statuses_request()->::turms::client::model::proto::QueryUserOnlineStatusesRequest::MergeFrom(
          from._internal_query_user_online_statuses_request());
      break;
    }
    case kUpdateUserLocationRequest: {
      _this->_internal_mutable_update_user_location_request()->::turms::client::model::proto::UpdateUserLocationRequest::MergeFrom(
          from._internal_update_user_location_request());
      break;
    }
    case kUpdateUserOnlineStatusRequest: {
      _this->_internal_mutable_update_user_online_status_request()->::turms::client::model::proto::UpdateUserOnlineStatusRequest::MergeFrom(
          from._internal_update_user_online_status_request());
      break;
    }
    case kUpdateUserRequest: {
      _this->_internal_mutable_update_user_request()->::turms::client::model::proto::UpdateUserRequest::MergeFrom(
          from._internal_update_user_request());
      break;
    }
    case kCreateFriendRequestRequest: {
      _this->_internal_mutable_create_friend_request_request()->::turms::client::model::proto::CreateFriendRequestRequest::MergeFrom(
          from._internal_create_friend_request_request());
      break;
    }
    case kCreateRelationshipGroupRequest: {
      _this->_internal_mutable_create_relationship_group_request()->::turms::client::model::proto::CreateRelationshipGroupRequest::MergeFrom(
          from._internal_create_relationship_group_request());
      break;
    }
    case kCreateRelationshipRequest: {
      _this->_internal_mutable_create_relationship_request()->::turms::client::model::proto::CreateRelationshipRequest::MergeFrom(
          from._internal_create_relationship_request());
      break;
    }
    case kDeleteFriendRequestRequest: {
      _this->_internal_mutable_delete_friend_request_request()->::turms::client::model::proto::DeleteFriendRequestRequest::MergeFrom(
          from._internal_delete_friend_request_request());
      break;
    }
    case kDeleteRelationshipGroupRequest: {
      _this->_internal_mutable_delete_relationship_group_request()->::turms::client::model::proto::DeleteRelationshipGroupRequest::MergeFrom(
          from._internal_delete_relationship_group_request());
      break;
    }
    case kDeleteRelationshipRequest: {
      _this->_internal_mutable_delete_relationship_request()->::turms::client::model::proto::DeleteRelationshipRequest::MergeFrom(
          from._internal_delete_relationship_request());
      break;
    }
    case kQueryFriendRequestsRequest: {
      _this->_internal_mutable_query_friend_requests_request()->::turms::client::model::proto::QueryFriendRequestsRequest::MergeFrom(
          from._internal_query_friend_requests_request());
      break;
    }
    case kQueryRelatedUserIdsRequest: {
      _this->_internal_mutable_query_related_user_ids_request()->::turms::client::model::proto::QueryRelatedUserIdsRequest::MergeFrom(
          from._internal_query_related_user_ids_request());
      break;
    }
    case kQueryRelationshipGroupsRequest: {
      _this->_internal_mutable_query_relationship_groups_request()->::turms::client::model::proto::QueryRelationshipGroupsRequest::MergeFrom(
          from._internal_query_relationship_groups_request());
      break;
    }
    case kQueryRelationshipsRequest: {
      _this->_internal_mutable_query_relationships_request()->::turms::client::model::proto::QueryRelationshipsRequest::MergeFrom(
          from._internal_query_relationships_request());
      break;
    }
    case kUpdateFriendRequestRequest: {
      _this->_internal_mutable_update_friend_request_request()->::turms::client::model::proto::UpdateFriendRequestRequest::MergeFrom(
          from._internal_update_friend_request_request());
      break;
    }
    case kUpdateRelationshipGroupRequest: {
      _this->_internal_mutable_update_relationship_group_request()->::turms::client::model::proto::UpdateRelationshipGroupRequest::MergeFrom(
          from._internal_update_relationship_group_request());
      break;
    }
    case kUpdateRelationshipRequest: {
      _this->_internal_mutable_update_relationship_request()->::turms::client::model::proto::UpdateRelationshipRequest::MergeFrom(
          from._internal_update_relationship_request());
      break;
    }
    case kCreateGroupRequest: {
      _this->_internal_mutable_create_group_request()->::turms::client::model::proto::CreateGroupRequest::MergeFrom(
          from._internal_create_group_request());
      break;
    }
    case kDeleteGroupRequest: {
      _this->_internal_mutable_delete_group_request()->::turms::client::model::proto::DeleteGroupRequest::MergeFrom(
          from._internal_delete_group_request());
      break;
    }
    case kQueryGroupsRequest: {
      _this->_internal_mutable_query_groups_request()->::turms::client::model::proto::QueryGroupsRequest::MergeFrom(
          from._internal_query_groups_request());
      break;
    }
    case kQueryJoinedGroupIdsRequest: {
      _this->_internal_mutable_query_joined_group_ids_request()->::turms::client::model::proto::QueryJoinedGroupIdsRequest::MergeFrom(
          from._internal_query_joined_group_ids_request());
      break;
    }
    case kQueryJoinedGroupInfosRequest: {
      _this->_internal_mutable_query_joined_group_infos_request()->::turms::client::model::proto::QueryJoinedGroupInfosRequest::MergeFrom(
          from._internal_query_joined_group_infos_request());
      break;
    }
    case kUpdateGroupRequest: {
      _this->_internal_mutable_update_group_request()->::turms::client::model::proto::UpdateGroupRequest::MergeFrom(
          from._internal_update_group_request());
      break;
    }
    case kCreateGroupBlockedUserRequest: {
      _this->_internal_mutable_create_group_blocked_user_request()->::turms::client::model::proto::CreateGroupBlockedUserRequest::MergeFrom(
          from._internal_create_group_blocked_user_request());
      break;
    }
    case kDeleteGroupBlockedUserRequest: {
      _this->_internal_mutable_delete_group_blocked_user_request()->::turms::client::model::proto::DeleteGroupBlockedUserRequest::MergeFrom(
          from._internal_delete_group_blocked_user_request());
      break;
    }
    case kQueryGroupBlockedUserIdsRequest: {
      _this->_internal_mutable_query_group_blocked_user_ids_request()->::turms::client::model::proto::QueryGroupBlockedUserIdsRequest::MergeFrom(
          from._internal_query_group_blocked_user_ids_request());
      break;
    }
    case kQueryGroupBlockedUserInfosRequest: {
      _this->_internal_mutable_query_group_blocked_user_infos_request()->::turms::client::model::proto::QueryGroupBlockedUserInfosRequest::MergeFrom(
          from._internal_query_group_blocked_user_infos_request());
      break;
    }
    case kCheckGroupJoinQuestionsAnswersRequest: {
      _this->_internal_mutable_check_group_join_questions_answers_request()->::turms::client::model::proto::CheckGroupJoinQuestionsAnswersRequest::MergeFrom(
          from._internal_check_group_join_questions_answers_request());
      break;
    }
    case kCreateGroupInvitationRequest: {
      _this->_internal_mutable_create_group_invitation_request()->::turms::client::model::proto::CreateGroupInvitationRequest::MergeFrom(
          from._internal_create_group_invitation_request());
      break;
    }
    case kCreateGroupJoinRequestRequest: {
      _this->_internal_mutable_create_group_join_request_request()->::turms::client::model::proto::CreateGroupJoinRequestRequest::MergeFrom(
          from._internal_create_group_join_request_request());
      break;
    }
    case kCreateGroupJoinQuestionsRequest: {
      _this->_internal_mutable_create_group_join_questions_request()->::turms::client::model::proto::CreateGroupJoinQuestionsRequest::MergeFrom(
          from._internal_create_group_join_questions_request());
      break;
    }
    case kDeleteGroupInvitationRequest: {
      _this->_internal_mutable_delete_group_invitation_request()->::turms::client::model::proto::DeleteGroupInvitationRequest::MergeFrom(
          from._internal_delete_group_invitation_request());
      break;
    }
    case kDeleteGroupJoinRequestRequest: {
      _this->_internal_mutable_delete_group_join_request_request()->::turms::client::model::proto::DeleteGroupJoinRequestRequest::MergeFrom(
          from._internal_delete_group_join_request_request());
      break;
    }
    case kDeleteGroupJoinQuestionsRequest: {
      _this->_internal_mutable_delete_group_join_questions_request()->::turms::client::model::proto::DeleteGroupJoinQuestionsRequest::MergeFrom(
          from._internal_delete_group_join_questions_request());
      break;
    }
    case kQueryGroupInvitationsRequest: {
      _this->_internal_mutable_query_group_invitations_request()->::turms::client::model::proto::QueryGroupInvitationsRequest::MergeFrom(
          from._internal_query_group_invitations_request());
      break;
    }
    case kQueryGroupJoinRequestsRequest: {
      _this->_internal_mutable_query_group_join_requests_request()->::turms::client::model::proto::QueryGroupJoinRequestsRequest::MergeFrom(
          from._internal_query_group_join_requests_request());
      break;
    }
    case kQueryGroupJoinQuestionsRequest: {
      _this->_internal_mutable_query_group_join_questions_request()->::turms::client::model::proto::QueryGroupJoinQuestionsRequest::MergeFrom(
          from._internal_query_group_join_questions_request());
      break;
    }
    case kUpdateGroupInvitationRequest: {
      _this->_internal_mutable_update_group_invitation_request()->::turms::client::model::proto::UpdateGroupInvitationRequest::MergeFrom(
          from._internal_update_group_invitation_request());
      break;
    }
    case kUpdateGroupJoinQuestionRequest: {
      _this->_internal_mutable_update_group_join_question_request()->::turms::client::model::proto::UpdateGroupJoinQuestionRequest::MergeFrom(
          from._internal_update_group_join_question_request());
      break;
    }
    case kUpdateGroupJoinRequestRequest: {
      _this->_internal_mutable_update_group_join_request_request()->::turms::client::model::proto::UpdateGroupJoinRequestRequest::MergeFrom(
          from._internal_update_group_join_request_request());
      break;
    }
    case kDeleteResourceRequest: {
      _this->_internal_mutable_delete_resource_request()->::turms::client::model::proto::DeleteResourceRequest::MergeFrom(
          from._internal_delete_resource_request());
      break;
    }
    case kQueryResourceDownloadInfoRequest: {
      _this->_internal_mutable_query_resource_download_info_request()->::turms::client::model::proto::QueryResourceDownloadInfoRequest::MergeFrom(
          from._internal_query_resource_download_info_request());
      break;
    }
    case kQueryResourceUploadInfoRequest: {
      _this->_internal_mutable_query_resource_upload_info_request()->::turms::client::model::proto::QueryResourceUploadInfoRequest::MergeFrom(
          from._internal_query_resource_upload_info_request());
      break;
    }
    case kQueryMessageAttachmentInfosRequest: {
      _this->_internal_mutable_query_message_attachment_infos_request()->::turms::client::model::proto::QueryMessageAttachmentInfosRequest::MergeFrom(
          from._internal_query_message_attachment_infos_request());
      break;
    }
    case kUpdateMessageAttachmentInfoRequest: {
      _this->_internal_mutable_update_message_attachment_info_request()->::turms::client::model::proto::UpdateMessageAttachmentInfoRequest::MergeFrom(
          from._internal_update_message_attachment_info_request());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TurmsRequest::CopyFrom(const TurmsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.TurmsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TurmsRequest::IsInitialized() const {
  return true;
}

void TurmsRequest::InternalSwap(TurmsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.request_id_, other->_impl_.request_id_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

std::string TurmsRequest::GetTypeName() const {
  return "turms.client.model.proto.TurmsRequest";
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
